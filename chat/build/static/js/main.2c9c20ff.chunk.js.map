{"version":3,"sources":["redux/reducers/indexReducers.js","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/user.js","redux/reducers sync /^/.*$","redux/store.js","components/Button/indexButton.js","components/Block/indexBlock.js","utils/helpers/validateField.js","utils/helpers/convertCurrentTime.js","utils/helpers/openNotification.js","assets/img/readed.svg","assets/img/no-read.svg","assets/img/readedWhite.svg","assets/img/no-readWhite.svg","assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","components/Time/indexTime.js","components/Avatar/indexAvatar.js","utils/helpers/generateAvatarFromHash.js","components/IconReaded/indexIconReaded.js","components/Message/indexMessage.jsx","components/Messages/indexMessages.js","components/DialogItem/indexDialogItem.jsx","components/Dialogs/indexDialogs.js","components/Status/indexStatus.js","components/ChatInput/indexChatInput.js","components/FormField/index.jsx","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","core/socket.js","redux/actions/dialogs.js","redux/actions/messages.js","redux/actions/user.js","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/indexSidebar.jsx","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","modules/LoginForm/indexLoginForm.js","modules/LoginForm/containers/LoginForm.js","modules/RegistrationForm/components/RegistrationForm.jsx","modules/RegistrationForm/indexRegistrationForm.js","modules/RegistrationForm/containers/RegistrationForm.js","pages/Auth/components/CheckEmailInfo.jsx","pages/Auth/indexAuth.jsx","pages/Home/indexHome.jsx","App.js","index.js"],"names":["combineReducers","reduce","initial","name","require","default","initialState","items","currentDialogId","window","location","pathname","split","isLoading","state","type","payload","map","dialog","_id","dialogId","lastMessage","readed","filter","message","data","token","localStorage","isAuth","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Button","props","className","classNames","size","Block","children","key","touched","errors","number","mins","Math","floor","secs","toFixed","text","title","duration","notification","description","getFreshDate","dateString","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Time","formatDistanceToNow","addSuffix","locale","ruLocale","Avatar","user","avatar","src","alt","fullname","hash","substr","char","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","colorLighten","generateAvatarFromHash","firstChar","toUpperCase","style","background","IconReaded","isMe","isReaded","readedSvg","noReadedSvg","MessageAudio","audioSrc","audioElem","useRef","useState","isPlaying","setIsPlaing","progress","setProgress","currentTime","setCurrentTime","useEffect","current","volume","addEventListener","ref","preload","width","onClick","pause","play","pauseSvg","playSvg","waveSvg","convertCurrentTime","Message","audio","attachments","isTyping","onRemoveMessage","length","content","trigger","shape","icon","EllipsisOutlined","readedSvgWhite","noReadedSvgWhite","item","index","url","filename","defaultProps","Messages","blockRef","tip","bind","getMessageTime","createdAtRaw","createdAt","isToday","format","DialogItem","created_at","undread","onSelect","to","isOnline","Dialogs","userId","onSearch","inputValue","onSelectDialog","Search","placeholder","onChange","target","value","orderBy","author","partner","image","Empty","PRESENTED_IMAGE_SIMPLE","Status","online","ChatInput","setValue","emojiPikerVisible","setShowEmojiPiker","onSendMessage","set","SmileOutlined","onKeyUp","keyCode","onFiles","files","containerProps","uploadProps","accept","multiple","CameraOutlined","CheckCircleOutlined","AudioOutlined","FormField","handleChange","handleBlur","values","Item","validateStatus","validateField","help","hasFeedback","prefix","onBlur","axios","defaults","baseURL","origin","headers","common","get","post","delete","postData","socket","io","replace","Actions","setDialogs","updateReadedStatus","setCurrentDialogId","dispatch","emit","fetchDialogs","dialogsApi","then","setMessages","addMessage","getState","dialogs","fetchSendMessage","messagesApi","setIsLoading","bool","removeMessageById","catch","fetchMessages","setUserData","setIsAuth","fetchUserData","userApi","err","response","status","fetchUserLogin","openNotification","fetchUserRegistration","obj","confirm_hash","connect","dialogsActions","Array","from","filtred","setFiltredItems","onChangeInput","toLowerCase","indexOf","onNewDialog","on","removeListener","messages","messagesActions","messagesRef","onNewMessage","scrollTo","currentDialogObj","visible","setVisible","setInputValue","messageText","setMessagaText","users","setUsers","selectedUserId","setSelectedUserId","onClose","onShow","onSelectUser","onModalOk","onChangeTextArea","Option","Select","TextArea","Input","Sidebar","options","TeamOutlined","FormOutlined","onCancel","footer","disabled","loading","label","notFoundContent","defaultActiveFirstOption","showArrow","filterOption","showSearch","autosize","minRows","maxRows","LoginForm","handleSubmit","isValid","isSubmitting","onSubmit","email","MailOutlined","password","LockOutlined","rules","test","password_2","forEach","withFormik","enableReinitialize","mapPropsToValues","validate","validateForm","setSubmitting","userActions","history","push","displayName","RegistrationForm","UserOutlined","required","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","setTimeout","renderTextInfo","verified","CheckEmailInfo","search","setVerified","checking","setChecking","info","setInfo","setStatus","verify_link","subTitle","extra","href","Auth","exact","path","component","Home","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"8FAAE,mBAIaA,sBAFE,CAAC,WAAY,UAAW,QAG9BC,QAAO,SAACC,EAASC,GAExB,OADAD,EAAQC,GAAQC,OAAQ,YAAKD,IAAQE,QAC9BH,IACN,M,oDCPCI,EAAe,CACjBC,MAAO,GACPC,gBAAiBC,OAAOC,SAASC,SAASC,MAAM,WAAW,GAC3DC,WAAW,GAGE,qBAA8C,IAA7CC,EAA4C,uDAApCR,EAAoC,yCAApBS,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAE5C,OAAQD,GACN,IAAK,oBACH,OAAO,2BACFD,GADL,IAEEP,MAAOS,IAEX,IAAK,qCACH,OAAO,2BACFF,GADL,IAEEP,MAAOO,EAAMP,MAAMU,KAAI,SAAAC,GAIrB,OAHIA,EAAOC,MAAQH,EAAQI,WACzBF,EAAOG,YAAYC,QAAS,GAEvBJ,OAGb,IAAK,gCACH,OAAO,2BACFJ,GADL,IAEEN,gBAAiBQ,IAErB,QACE,OAAOF,K,6DC/BTR,EAAe,CACnBC,MAAO,GACPM,WAAW,GAGE,qBAA8C,IAA7CC,EAA4C,uDAApCR,EAAoC,yCAApBS,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IAAK,uBACH,OAAO,2BACFD,GADL,IAEEP,MAAM,GAAD,mBAAMO,EAAMP,OAAZ,CAAmBS,MAE5B,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEP,MAAOS,EACPH,WAAW,IAEf,IAAK,0BACH,OAAO,2BACFC,GADL,IAEED,UAAWG,IAEf,IAAK,0BACH,OAAO,2BACFF,GADL,IAEEP,MAAOO,EAAMP,MAAMgB,QAAO,SAAAC,GAAO,OAAIA,EAAQL,MAAQH,OAEzD,QACE,OAAOF,K,oDC5BPR,EAAe,CACnBmB,KAAM,KACNC,MAAOjB,OAAOkB,aAAaD,MAC3BE,SAAUnB,OAAOkB,aAAaD,OAIjB,qBAA8C,IAA7CZ,EAA4C,uDAApCR,EAAoC,yCAApBS,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5C,OAAQD,GACN,IAAK,gBACH,OAAO,2BACFD,GADL,IAEEW,KAAMT,EACNY,QAAQ,EACRF,MAAOjB,OAAOkB,aAAaD,QAE/B,IAAK,mBACH,OAAO,2BACFZ,GADL,IAEEc,OAAQZ,IAEZ,QACE,OAAOF,K,oBCvBb,IAAIG,EAAM,CACT,YAAa,IACb,eAAgB,IAChB,kBAAmB,IACnB,qBAAsB,IACtB,aAAc,IACd,gBAAiB,IACjB,SAAU,IACV,YAAa,KAId,SAASY,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEjB,EAAKa,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOlB,EAAIa,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKrB,IAEpBY,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oZCxBdY,EAAmBlC,OAAOmC,sCAAwCC,IAElEC,EAAa,CAACC,KAOLC,EALDC,YACZC,UACAP,EAAiBQ,IAAe,WAAf,EAAmBL,K,oHCYvBM,MAff,SAAgBC,GACd,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,UAAWC,IAAW,SAAUF,EAAMC,UAAW,CAC/C,gBAAgC,UAAfD,EAAMG,W,OCJhBC,MAJf,YAAyC,IAAxBC,EAAuB,EAAvBA,SAAUJ,EAAa,EAAbA,UACzB,OAAO,qBAAKA,UAAWC,IAAW,QAASD,GAApC,SAAiDI,K,mCCN3C,WAACC,EAAKC,EAASC,GAC5B,OAAID,EAAQD,GACNE,EAAOF,GACF,QAEA,UAGF,ICRI,WAACG,GACd,IAAMC,EAAOC,KAAKC,MAAMH,EAAS,IAC3BI,GAAQJ,EAAS,IAAIK,UAC3B,MAAM,GAAN,OAAUJ,EAAO,GAAK,IAAM,IAA5B,OAAiCA,EAAjC,YAAyCG,EAAO,GAAK,IAAM,IAA3D,OAAgEA,I,2BCDnD,kBAAGE,EAAH,EAAGA,KAAH,IAASrD,YAAT,MAAgB,OAAhB,EAAwBsD,EAAxB,EAAwBA,MAAxB,IAA+BC,gBAA/B,MAA0C,EAA1C,SACbC,IAAaxD,GAAM,CACjBS,QAAS6C,EACTG,YAAaJ,EACbE,cCNW,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,wCCA1B,MAA0B,yCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kC,2BCOnCG,EAAe,SAACC,GACpB,IAAMC,EAAO,IAAIC,KAAKF,GAEtB,OAAO,IAAIE,KACTD,EAAKE,cACLF,EAAKG,WACLH,EAAKI,UACLJ,EAAKK,WACLL,EAAKM,aACLN,EAAKO,eAiBMC,EAbF,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAH,OACX,cAAC,WAAD,UACGS,YAAoBX,EAAaE,GAAO,CACvCU,WAAW,EACXC,OAAQC,SCICC,G,OArBA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,GAAIA,EAAKC,OACP,OAAO,qBAAKpC,UAAU,SAASqC,IAAKF,EAAKC,OAAQE,IAAG,iBAAYH,EAAKI,YAC/D,IAAD,ECEM,SAACC,GAAU,IAAD,EACLA,EACfC,OAAO,EAAG,GACVnF,MAAM,IACNK,KAAI,SAAC+E,GAAD,OAdgBlC,EAcUkC,EAAKC,WAAW,IAbpC,IACJ,IAELnC,EAAS,EACJ,EAEFA,EAAS,IAAM,IAAMA,EAAS,EAAI,EAAIA,EAPvB,IAACA,KAUA,mBAChBoC,EADgB,KACbC,EADa,KACVC,EADU,KAMvB,MAAO,CACLC,MAAOC,IAAU,CAAEJ,IAAGC,IAAGC,MAAKG,QAAQ,IAAIC,SAAS,IAAIC,cACvDC,aAAcJ,IAAU,CAAEJ,IAAGC,IAAGC,MAAKG,QAAQ,IAAIC,SAAS,IAAIC,eDT9BE,CAAuBlB,EAAKtE,KAApDkF,EADH,EACGA,MAAOK,EADV,EACUA,aAETE,EAAYnB,EAAKI,SAAS,GAAGgB,cACnC,OACE,qBACEC,MAAO,CAAEC,WAAW,2BAAD,OAA6BV,EAA7B,gBAA0CK,EAA1C,aACnBpD,UAAU,wBAFZ,SAGGsD,ME+BMI,G,OAxCI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1B,OAAID,EACEC,EAEA,qBACE5D,UAAU,uBACVqC,IAAKwB,EACLvB,IAAI,gBAMN,qBACItC,UAAU,gDACVqC,IAAKyB,EACLxB,IAAI,mBAKL,OCPLyB,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChBC,EAAYC,iBAAO,MADY,EAGJC,oBAAS,GAHL,mBAG9BC,EAH8B,KAGnBC,EAHmB,OAILF,mBAAS,GAJJ,mBAI9BG,EAJ8B,KAIpBC,EAJoB,OAKCJ,mBAAS,GALV,mBAK9BK,EAL8B,KAKjBC,EALiB,KAgDrC,OAjCAC,qBAAU,WACRT,EAAUU,QAAQC,OAAS,MAC3BX,EAAUU,QAAQE,iBAChB,WACA,WACER,GAAY,MAEd,GAEFJ,EAAUU,QAAQE,iBAChB,SACA,WACER,GAAY,GACZE,EAAY,GACZE,EAAe,MAEjB,GAEFR,EAAUU,QAAQE,iBAChB,SACA,WACER,GAAY,MAEd,GAEFJ,EAAUU,QAAQE,iBAAiB,cAAc,WAC/C,IAAM7D,EAAYiD,EAAUU,SAAWV,EAAUU,QAAQ3D,UAAa,EACtEyD,EAAeR,EAAUU,QAAQH,aAEjCD,EAAaN,EAAUU,QAAQH,YAAcxD,EAAY,UAE1D,IAGD,sBAAKhB,UAAU,iBAAf,UACE,uBAAO4E,OAAO,MAAME,IAAKb,EAAW5B,IAAK2B,EAAUe,QAAQ,SAC3D,qBACE/E,UAAU,0BACVwD,MAAO,CAAEwB,MAAOV,EAAW,OAE7B,sBAAKtE,UAAU,sBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,wBAAQiF,QAlDG,WACZb,EAGHH,EAAUU,QAAQO,QAFlBjB,EAAUU,QAAQQ,QAgDd,SACGf,EACC,qBAAK/B,IAAK+C,EAAU9C,IAAI,cAExB,qBAAKD,IAAKgD,EAAS/C,IAAI,iBAI7B,qBAAKtC,UAAU,sBAAf,SACE,qBAAKqC,IAAKiD,EAAShD,IAAI,eAEzB,sBAAMtC,UAAU,0BAAhB,SACGuF,EAAmBf,YAM9B,SAASgB,EAAT,GAWG,EAVDpD,OAUE,IATFD,EASC,EATDA,KACArB,EAQC,EARDA,KACAO,EAOC,EAPDA,KACAoE,EAMC,EANDA,MACA9B,EAKC,EALDA,KACAC,EAIC,EAJDA,SACA8B,EAGC,EAHDA,YACAC,EAEC,EAFDA,SACAC,EACC,EADDA,gBAEA,OACE,sBACE5F,UAAWC,IAAW,UAAW,CAC/B,gBAAiB0D,EACjB,qBAAsBgC,EACtB,oBAAqBF,EACrB,iBAAkBC,GAAsC,IAAvBA,EAAYG,SALjD,UAQE,cAAC,IAAD,CACIC,QACE,8BACE,cAAC,IAAD,CAAQb,QAASW,EAAjB,0DAGJG,QAAQ,QANZ,SAQI,qBAAK/F,UAAU,wBAAf,SACE,cAAC,IAAD,CAAQvC,KAAK,OAAOuI,MAAM,SAASC,KAAM,cAACC,EAAA,EAAD,UAG/C,qBAAKlG,UAAU,kBAAf,SACE,cAAC,EAAD,CAAQmC,KAAMA,MAEhB,sBAAKnC,UAAU,qBAAf,WACIyF,GAAS3E,GAAQ6E,IACjB,sBAAK3F,UAAU,kBAAf,UACGc,GAAQ,mBAAGd,UAAU,gBAAb,SAA8Bc,IACtC6E,GACC,sBAAK3F,UAAU,kBAAf,UACE,yBACA,yBACA,4BAGHyF,GAAS,cAAC,EAAD,CAAczB,SAAUyB,IAClC,qBAAKzF,UAAU,gBACf,sBAAKA,UAAU,4BAAf,UACE,cAAC,EAAD,CACE2D,KAAMA,EACNC,SAAUA,EACV5D,UAAU,gCAEZ,qBACEqC,IACEsB,EACIC,EACEC,EACAC,EACFF,EACAuC,EACAC,EAEN9D,IAAI,aACJtC,UAAU,8BAKjB0F,GACC,qBAAK1F,UAAU,uBAAf,SACG0F,EAAY/H,KAAI,SAAC0I,EAAMC,GAAP,OACf,qBAAiBtG,UAAU,4BAA3B,SACE,qBAAKqC,IAAKgE,EAAKE,IAAKjE,IAAK+D,EAAKG,YADtBF,QAMfjF,GACC,sBAAMrB,UAAU,gBAAhB,SACE,cAAC,EAAD,CAAMqB,KAAMA,YAQxBmE,EAAQiB,aAAe,CACrBtE,KAAM,IAeOqD,S,mBCnKAkB,I,OAhCE,SAAC,GAA2D,IAAzDd,EAAwD,EAAxDA,gBAAiBe,EAAuC,EAAvCA,SAAUpJ,EAA6B,EAA7BA,UAAWN,EAAkB,EAAlBA,MAAOkF,EAAW,EAAXA,KAC/D,OACE,qBACE2C,IAAK6B,EACL3G,UAAWC,IAAW,WAAY,CAAE,oBAAqB1C,IAF3D,SAIGA,EACC,cAAC,KAAD,CAAM2C,KAAK,QAAQ0G,IAAI,eACrB3J,IAAUM,EACZN,EAAM4I,OAAS,EACb5I,EAAMU,KAAI,SAAC0I,GAAD,OACR,cAAC,GAAD,2BAEMA,GAFN,IAGE1C,KAAMxB,EAAKtE,MAAQwI,EAAKlE,KAAKtE,IAC7B+H,gBAAiBA,EAAgBiB,K,UAAWR,EAAKxI,OAH5CwI,EAAKxI,QAOd,cAAC,KAAD,CAAOqD,YAAY,kEAGrB,cAAC,KAAD,CAAOA,YAAY,kF,oBCVrB4F,GAAiB,SAACC,GACtB,IAAMC,EAda,SAAC5F,GACpB,IAAMC,EAAO,IAAIC,KAAKF,GAEtB,OAAO,IAAIE,KACTD,EAAKE,cACLF,EAAKG,WACLH,EAAKI,UACLJ,EAAKK,WACLL,EAAKM,aACLN,EAAKO,cAKWT,CAAa4F,GAC/B,OAAIE,aAAQD,GACHE,aAAOF,EAAW,SAElBE,aAAOF,EAAW,eA6CdG,GAzCI,SAAC,GAAD,IACjBtJ,EADiB,EACjBA,IAGAuJ,GAJiB,EAEjBjF,KAFiB,EAGjBkF,QAHiB,EAIjBD,YAEAzD,GANiB,EAKjB7C,KALiB,EAMjB6C,MACAzG,EAPiB,EAOjBA,gBACAoK,EARiB,EAQjBA,SACAvJ,EATiB,EASjBA,YATiB,OAWnB,cAAC,IAAD,CAAMwJ,GAAE,kBAAa1J,GAArB,SACI,sBACEmC,UAAWC,IAAW,gBAAiB,CACrC,wBAAyBlC,EAAYoE,KAAKqF,SAC1C,0BAA2BtK,IAAoBW,IAEjDoH,QAASqC,EAAST,K,UAAWhJ,GAL/B,UAOE,qBAAKmC,UAAU,uBAAf,SACE,cAAC,EAAD,CAAQmC,KAAMpE,EAAYoE,SAE5B,sBAAKnC,UAAU,qBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,4BAAIjC,EAAYoE,KAAKI,WACrB,+BAAOuE,GAAeM,QAExB,sBAAKpH,UAAU,4BAAf,UACE,4BAAIjC,EAAY+C,OACf6C,GAAQ,cAAC,EAAD,CAAYA,MAAM,EAAMC,UAAU,IAC1C7F,EAAYsJ,QAAU,GACrB,qBAAKrH,UAAU,kCAAf,SACGjC,EAAYsJ,QAAU,EAAI,KAAOtJ,EAAYsJ,sB,qBCrB7CI,I,OAjCC,SAAC,GAAD,IAAGxK,EAAH,EAAGA,MAAOyK,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,WAAY1K,EAAxC,EAAwCA,gBAAiB2K,EAAzD,EAAyDA,eAAzD,OACd,sBAAK7H,UAAU,UAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAM8H,OAAP,CACEC,YAAY,uHACZC,SAAU,SAAAnJ,GAAC,OAAI8I,EAAS9I,EAAEoJ,OAAOC,QACjCA,MAAON,MAIV3K,EAAM4I,OACLsC,KAAQlL,EAAO,CAAC,SAASU,KAAI,SAAA0I,GAAI,OAC/B,cAAC,GAAD,aAEE1C,KAAM0C,EAAK+B,OAAOvK,MAAQ6J,EAC1BA,OAAQA,EACRJ,SAAYO,EACZ3K,gBAAiBA,EACjBiF,KAAMkE,EAAKgC,QACXjB,WAAYf,EAAKtI,YAAYiJ,UAC7BlG,KAAMuF,EAAKtI,YAAY+C,MACnBuF,GARCA,EAAKxI,QAYd,cAAC,KAAD,CACEyK,MAAOC,KAAMC,uBACbtH,YAAY,sGCdLuH,I,OAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQnG,EAAX,EAAWA,SAAX,OACb,sBAAKvC,UAAU,6BAAf,UACE,mBAAGA,UAAU,+BAAb,SAA6CuC,IAC7C,qBAAKvC,UAAU,6BAAf,SACE,sBAAMA,UAAWC,IAAW,SAAU,CAAE,iBAAkByI,IAA1D,SACGA,EAAS,uCAAW,gD,kDCyDdC,I,OA1DG,SAAA5I,GAAS,IAAD,EACEoE,mBAAS,IADX,mBACjB+D,EADiB,KACVU,EADU,OAEuBzE,oBAAS,GAFhC,mBAEjB0E,EAFiB,KAEEC,EAFF,KAGhBC,EAAmChJ,EAAnCgJ,cAAe7L,EAAoB6C,EAApB7C,gBAavB,OACE,sBAAK8C,UAAU,aAAf,UACE,sBAAKA,UAAU,wBAAf,UACG6I,GACC,qBAAK7I,UAAU,0BAAf,SACE,cAAC,IAAD,CAAQgJ,IAAI,YAGhB,cAAC,IAAD,CAAQ/D,QAnBW,WACvB6D,GAAmBD,IAkBoBpL,KAAK,OAAOuI,MAAM,SAASC,KAAM,cAACgD,GAAA,EAAD,SAEtE,cAAC,IAAD,CACEjB,SAAU,SAAAnJ,GAAC,OAAI+J,EAAS/J,EAAEoJ,OAAOC,QACjCgB,QAnBoB,SAAArK,GACN,KAAdA,EAAEsK,UACJJ,EAAcb,EAAOhL,GACrB0L,EAAS,MAiBP1I,KAAK,QACL6H,YAAY,sIACZG,MAAOA,IAGT,sBAAKlI,UAAU,sBAAf,UAEI,cAAC,eAAD,CACEoJ,QAAS,SAAAC,GAAK,OAAIA,GAClBC,eAAgB,CACdtJ,UAAW,kCAEbuJ,YAAa,CACXC,OAAQ,4BACRC,SAAU,YAPd,SASC,cAAC,IAAD,CAAQhM,KAAK,OAAOuI,MAAM,SAASC,KAAM,cAACyD,GAAA,EAAD,QAG3CxB,EAAQ,cAAC,IAAD,CAAQzK,KAAK,OAAOuI,MAAM,SAASC,KAAM,cAAC0D,GAAA,EAAD,MAA8B,cAAC,IAAD,CAAQlM,KAAK,OAAOuI,MAAM,SAASC,KAAM,cAAC2D,GAAA,EAAD,cCtBlHC,GA/BG,SAAC,GAUZ,IATLhN,EASI,EATJA,KACAkL,EAQI,EARJA,YACA+B,EAOI,EAPJA,aACAC,EAMI,EANJA,WACA9D,EAKI,EALJA,KACA3F,EAII,EAJJA,QACAC,EAGI,EAHJA,OACAyJ,EAEI,EAFJA,OACAvM,EACI,EADJA,KAEA,OACE,cAAC,IAAKwM,KAAN,CACAC,eAAgBC,EAActN,EAAMyD,EAASC,GAC7C6J,KAAO9J,EAAQzD,GAAa0D,EAAO1D,GAAZ,GACvBwN,aAAW,EAHX,SAKE,cAAC,IAAD,CACE5L,GAAI5B,EACJA,KAAMA,EACNqD,KAAK,QACL6H,YAAaA,EACbuC,OAAQrE,EACRiC,MAAO8B,EAAOnN,GACdmL,SAAU8B,EACVS,OAAQR,EACRtM,KAAMA,O,yCC7Bd+M,KAAMC,SAASC,QAAUvN,OAAOC,SAASuN,OACzCH,KAAMC,SAASG,QAAQC,OAAvB,MAAyC1N,OAAOkB,aAAaD,MAE7DjB,OAAOqN,MAAQA,KAEAA,UAAf,ECLe,GACL,kBAAMA,GAAMM,IAAI,aADX,GAEL,gBAAGzC,EAAH,EAAGA,QAASvH,EAAZ,EAAYA,KAAZ,OAAuB0J,GAAMO,KAAK,WAAY,CAAE1C,UAASvH,UCApD,GACK,SAACrC,GAAD,OAAQ+L,GAAMM,IAAI,oBAAsBrM,IAD7C,GAEP,SAACqC,EAAMhD,GAAP,OACJ0M,GAAMO,KAAK,YAAa,CACtBjK,KAAMA,EACNlD,OAAQE,KALC,GAOD,SAACW,GAAD,OAAQ+L,GAAMQ,OAAO,gBAAkBvM,ICTtC,GACN,SAACwM,GAAD,OAAcT,GAAMO,KAAK,cAAeE,IADlC,GAEC,SAACA,GAAD,OAAcT,GAAMO,KAAK,qBAAsBE,IAFhD,GAGD,SAAAzI,GAAI,OAAIgI,GAAMM,IAAI,qBAAuBtI,IAHxC,GAIN,kBAAMgI,GAAMM,IAAI,qBAJV,GAKD,SAACjO,GAAD,OAAU2N,GAAMM,IAAI,iB,UCHnBI,G,OAFAC,GAAGhO,OAAOC,SAASuN,OAAOS,QAAQ,OAAQ,SCCnDC,GAAU,CACdC,WAAY,SAAArO,GAAK,MAAK,CACpBQ,KAAM,oBACNC,QAAST,IAEXsO,mBAAoB,kBAA2B,CAC7C9N,KAAM,qCACNC,QAAS,CACPgK,OAHgB,EAAGA,OAInB5J,SAJgB,EAAWA,YAO/B0N,mBAAoB,SAAA/M,GAAE,OAAI,SAAAgN,GACxBP,GAAOQ,KAAK,eAAgBjN,GAC5BgN,EAAS,CACPhO,KAAM,gCACNC,QAASe,MAGbkN,aAAc,kBAAM,SAAAF,GAClBG,KAAoBC,MAAK,YAAe,IAAZ1N,EAAW,EAAXA,KAC1BsN,EAASJ,GAAQC,WAAWnN,UAKnBkN,MC3BTA,GAAU,CACdS,YAAa,SAAC7O,GAAD,MAAY,CACvBQ,KAAM,qBACNC,QAAST,IAEX8O,WAAY,SAAC7N,GAAD,OAAa,SAACuN,EAAUO,GACdA,IAAZC,QACA/O,kBACgBgB,EAAQN,OAAOC,KACrC4N,EAAS,CACPhO,KAAM,uBACNC,QAASQ,MAIfgO,iBAAkB,SAACpL,EAAMhD,GAAP,OAAoB,SAAC2N,GACrCU,GAAiBrL,EAAMhD,KAEzBsO,aAAc,SAACC,GAAD,MAAW,CACvB5O,KAAM,0BACNC,QAAS2O,IAEXC,kBAAmB,SAAC7N,GAAD,OAAQ,SAACgN,GAC1BA,EAAS,CACPhO,KAAM,0BACNC,QAASe,IAEX0N,GACc1N,GACXoN,MAAK,YAAc,EAAX1N,QAGRoO,OAAM,WACLd,EAASJ,GAAQe,cAAa,SAGpCI,cAAe,SAAC1O,GAAD,OAAc,SAAC2N,GAC5BA,EAASJ,GAAQe,cAAa,IAC9BD,GACoBrO,GACjB+N,MAAK,YAAe,IAAZ1N,EAAW,EAAXA,KACPsN,EAASJ,GAAQS,YAAY3N,OAE9BoO,OAAM,WACLd,EAASJ,GAAQe,cAAa,UAKvBf,MChDTA,GAAU,CACdoB,YAAa,SAACtO,GAAD,MAAW,CACtBV,KAAM,gBACNC,QAASS,IAEXuO,UAAW,SAACL,GAAD,MAAW,CACpB5O,KAAM,mBACNC,QAAS2O,IAEXM,cAAe,kBAAM,SAAClB,GACpBmB,KAEGf,MAAK,YAAe,IAAZ1N,EAAW,EAAXA,KACPsN,EAASJ,GAAQoB,YAAYtO,OAE9BoO,OAAM,SAACM,GACsB,MAAxBA,EAAIC,SAASC,SACftB,EAASJ,GAAQoB,aAAY,WACtBtP,OAAOkB,aAAaD,YAInC4O,eAAgB,SAAC/B,GAAD,OAAc,SAACQ,GAC7B,OAAOmB,GACE3B,GACNY,MAAK,YAAe,IAAZ1N,EAAW,EAAXA,KACCC,EAAUD,EAAVC,MAUR,OATA6O,EAAiB,CACflM,MAAO,8CACPD,KAAM,iHACNrD,KAAM,YAERN,OAAOqN,MAAMC,SAASG,QAAQC,OAA9B,MAAgDzM,EAChDjB,OAAOkB,aAAP,MAA+BD,EAC/BqN,EAASJ,GAAQsB,iBACjBlB,EAASJ,GAAQqB,WAAU,IACpBvO,KAERoO,OAAM,YACmB,MADD,EAAfO,SACKC,QACXE,EAAiB,CACflM,MAAO,8HACPD,KAAM,0IACNrD,KAAM,eAKhByP,sBAAuB,SAACjC,GAAD,OAAc,SAACQ,GACpC,OAAOmB,GAAqB3B,GAAUY,MAAK,YAAe,IAAZ1N,EAAW,EAAXA,KAE5C,OADAhB,OAAOkB,aAAP,WAAoCF,EAAKgP,IAAIC,aACtCjP,QAKEkN,MCUAgC,gBAAQ,qBAAGpB,UAAuBqB,GAAlCD,EA7DC,SAAC,GAMV,IALL1B,EAKI,EALJA,aACAzO,EAII,EAJJA,gBACAsO,EAGI,EAHJA,mBACAvO,EAEI,EAFJA,MACAyK,EACI,EADJA,OACI,EAC2BvD,mBAAS,IADpC,mBACGyD,EADH,KACegB,EADf,OAE+BzE,mBAASoJ,MAAMC,KAAKvQ,IAFnD,mBAEGwQ,EAFH,KAEYC,EAFZ,KAIEC,EAAgB,WAAiB,IAAhBzF,EAAe,uDAAP,GAC7BwF,EACEzQ,EAAMgB,QACJ,SAACL,GAAD,OACEA,EAAOwK,OAAO7F,SAASqL,cAAcC,QAAQ3F,EAAM0F,gBACjD,GACFhQ,EAAOyK,QAAQ9F,SAASqL,cAAcC,QAAQ3F,EAAM0F,gBAClD,MAGRhF,EAASV,IAGL4F,EAAc,WAClBnC,KAyBF,OAtBAxO,OAAOwO,aAAeA,EACtBjH,qBAAU,WACJzH,EAAM4I,QACR8H,MAED,CAAC1Q,IAEJyH,qBAAU,WASR,OARAiH,IAMAT,GAAO6C,GAAG,wBAAyBD,GACnC5C,GAAO6C,GAAG,sBAAuBD,GAC1B,WACL5C,GAAO8C,eAAe,wBAAyBF,GAC/C5C,GAAO8C,eAAe,sBAAuBF,MAE9C,IAGD,cAAC,GAAD,CACEpG,OAAQA,EACRzK,MAAOwQ,EACP9F,SAAUgG,EACV/F,WAAYA,EACZC,eAAgB2D,EAChBtO,gBAAiBA,OCjBRmQ,gBACX,gBAAGpB,EAAH,EAAGA,QAASgC,EAAZ,EAAYA,SAAU9L,EAAtB,EAAsBA,KAAtB,MAAkC,CAClCjF,gBAAiB+O,EAAQ/O,gBACzBD,MAAOgR,EAAShR,MAChBM,UAAW0Q,EAAS1Q,UACpB4E,KAAMA,EAAKhE,QAEb+P,GAPab,EAvCC,SAAC,GAQR,IAPLnQ,EAOI,EAPJA,gBACAsP,EAMI,EANJA,cACAT,EAKI,EALJA,WACA9O,EAII,EAJJA,MACAkF,EAGI,EAHJA,KACA5E,EAEI,EAFJA,UACA+O,EACI,EADJA,kBAEM6B,EAAcjK,iBAAO,MAErBkK,EAAe,SAAAjQ,GACnB4N,EAAW5N,IAiBb,OAdAuG,qBAAU,WAOR,OANIxH,GACFsP,EAActP,GAGhBgO,GAAO6C,GAAG,sBAAuBK,GAE1B,kBAAMlD,GAAO8C,eAAe,sBAAuBI,MACzD,CAAClR,IAEJwH,qBAAU,WACRyJ,EAAYxJ,QAAQ0J,SAAS,EAAG,UAC/B,CAACpR,IAEK,cAAC,GAAD,CACLkF,KAAMA,EACNwE,SAAUwH,EACVlR,MAAOA,EACPM,UAAWA,EACXqI,gBAAiB0G,OC5BVe,gBACb,qBAAGpB,UACHiC,GAFab,EATG,SAAC,GAA2C,IAAzCnB,EAAwC,EAAxCA,iBAAkBhP,EAAsB,EAAtBA,gBACrC,OACE,cAAC,GAAD,CACE6L,cAAemD,EACfhP,gBAAiBA,OCcRmQ,gBAAQ,gBAAGpB,EAAH,EAAGA,QAAS9J,EAAZ,EAAYA,KAAZ,MAAwB,CAC7C8J,QAASA,EAAQhP,MACjBC,gBAAiB+O,EAAQ/O,gBACzBiF,KAAMA,EAAKhE,QAHEkP,EAnBA,SAAC,GAAwC,IAAtCnQ,EAAqC,EAArCA,gBAAiBiF,EAAoB,EAApBA,KAAM8J,EAAc,EAAdA,QACvC,IAAKA,EAAQpG,SAAW3I,EACtB,OAAO,KAGT,IAAMoR,EAAmBrC,EAAQhO,QAC/B,SAACL,GAAD,OAAYA,EAAOC,MAAQX,KAC3B,GAEEmL,EAAU,GAOd,OAJEA,EADEiG,EAAiBlG,OAAOvK,MAAQsE,EAAKtE,IAC7ByQ,EAAiBjG,QAEjBiG,EAAiBlG,OAEtB,cAAC,GAAD,CAAYM,OAAQL,EAAQb,SAAUjF,SAAU8F,EAAQ9F,cC6DhD8K,gBAAQ,kBAAe,CAAElL,KAAjB,EAAGA,KAAyBhE,QAApCkP,EA5EQ,SAAC,GAAc,IAAZlL,EAAW,EAAXA,KAAW,EACLgC,oBAAS,GADJ,mBAC5BoK,EAD4B,KACnBC,EADmB,OAECrK,mBAAS,IAFV,mBAE5ByD,EAF4B,KAEhB6G,EAFgB,OAGGtK,mBAAS,IAHZ,mBAG5BuK,EAH4B,KAGfC,EAHe,OAITxK,mBAAS,IAJA,mBAI5ByK,EAJ4B,KAIrBC,EAJqB,OAKD1K,oBAAS,GALR,mBAK5B5G,EAL4B,KAKjB6O,EALiB,OAMSjI,oBAAS,GANlB,mBAM5B2K,EAN4B,KAMZC,EANY,KAQ7BC,EAAU,WACdR,GAAW,IA+Cb,OACE,cAAC,GAAD,CACErM,KAAMA,EACNyF,WAAYA,EACZ2G,QAASA,EACThR,UAAWA,EACXyR,QAASA,EACTC,OAlDW,WACbT,GAAW,IAkDT7G,SA/Ca,SAAAO,GACfkE,GAAa,GACbQ,GACc1E,GACX2D,MAAK,YAAe,IAAZ1N,EAAW,EAAXA,KACP0Q,EAAS1Q,GACTiO,GAAa,MAEdG,OAAM,WACLH,GAAa,OAuCfuB,cAtBsB,SAAAzF,GACxBuG,EAAcvG,IAsBZgH,aAfiB,SAAAxH,GACnBqH,EAAkBrH,IAehByH,UArCgB,WAClBvD,GACU,CACNvD,QAASyG,EACThO,KAAM4N,IAEP7C,KAAKmD,GACLzC,OAAM,WACLH,GAAa,OA8BfgD,iBArBqB,SAAAvQ,GACvB8P,EAAe9P,EAAEoJ,OAAOC,QAqBtBwG,YAAaA,EACbI,eAAgBA,EAChBF,MAAOA,O,oBCrEPS,I,OAAWC,KAAXD,QACAE,GAAaC,IAAbD,SAEFE,GAAU,SAAC,GAeV,IAdLtN,EAcI,EAdJA,KACAoM,EAaI,EAbJA,QACA3G,EAYI,EAZJA,WACA8G,EAWI,EAXJA,YACAI,EAUI,EAVJA,eACAvR,EASI,EATJA,UACAqR,EAQI,EARJA,MACAK,EAOI,EAPJA,OACAD,EAMI,EANJA,QACArH,EAKI,EALJA,SACAgG,EAII,EAJJA,cACAuB,EAGI,EAHJA,aACAE,EAEI,EAFJA,iBACAD,EACI,EADJA,UAEMO,EAAUd,EAAMjR,KAAI,SAACwE,GAAD,OACxB,cAACkN,GAAD,UAAwBlN,EAAKI,UAAhBJ,EAAKtE,QAGpB,OACE,sBAAKmC,UAAU,gBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,gCACE,cAAC2P,GAAA,EAAD,IACA,4HAEF,cAAC,IAAD,CACE1K,QAASgK,EACTxR,KAAK,OACLuI,MAAM,SACNC,KAAM,cAAC2J,GAAA,EAAD,SAIV,qBAAK5P,UAAU,wBAAf,SACE,cAAC,GAAD,CAAS0H,OAAQvF,GAAQA,EAAKtE,QAEhC,cAAC,KAAD,CACEkD,MAAM,kFACNwN,QAASA,EACTsB,SAAUb,EACVhK,MAAO,IACP8K,OAAQ,CACN,cAAC,IAAD,CAAmB7K,QAAS+J,EAA5B,uDAAY,QAGZ,cAAC,IAAD,CACEe,UAAWrB,EAEXjR,KAAK,UACLuS,QAASzS,EACT0H,QAASkK,EALX,uDAEM,WAXV,SAoBE,eAAC,IAAD,CAAMnP,UAAU,kBAAhB,UACE,cAAC,IAAKiK,KAAN,CAAWgG,MAAM,mKAAjB,SACE,cAAC,KAAD,CACEjQ,UAAU,gBACVkI,MAAON,EACPD,SAAUA,EACVK,SAAU2F,EACVrG,SAAU4H,EACVgB,gBAAiB,KACjB1M,MAAO,CAAEwB,MAAO,QAChBmL,0BAA0B,EAC1BC,WAAW,EACXC,cAAc,EACdtI,YAAY,2LACZiH,QAASA,EACTsB,YAAU,EAbZ,SAeGZ,MAGJZ,GACC,cAAC,IAAK7E,KAAN,CACEgG,MAAM,mIACNjQ,UAAU,gBAFZ,SAIE,cAACuP,GAAD,CACEgB,SAAU,CAAEC,QAAS,EAAGC,QAAS,IACjCzI,SAAUoH,EACVlH,MAAOwG,eAUvBe,GAAQhJ,aAAe,CACrBmI,MAAO,IAGMa,UChCAiB,GAtEG,SAAC3Q,GAAW,IAE1BiK,EAQEjK,EARFiK,OACA1J,EAOEP,EAPFO,QACAC,EAMER,EANFQ,OACAuJ,EAKE/J,EALF+J,aACAC,EAIEhK,EAJFgK,WACA4G,EAGE5Q,EAHF4Q,aACAC,EAEE7Q,EAFF6Q,QACAC,EACE9Q,EADF8Q,aAEF,OACE,gCACE,sBAAK7Q,UAAU,YAAf,UACE,kHACA,uNAEF,cAAC,EAAD,UACE,eAAC,IAAD,CAAM8Q,SAAUH,EAAc3Q,UAAU,aAAxC,UACE,cAAC,IAAKiK,KAAN,CACEC,eAAgBC,EAAc,QAAS7J,EAASC,GAChD6J,KAAO9J,EAAQyQ,MAAaxQ,EAAOwQ,MAAZ,GACvB1G,aAAW,EAHb,SAKE,cAAC,IAAD,CACE5L,GAAG,QACH6L,OAAQ,cAAC0G,EAAA,EAAD,IACR9Q,KAAK,QACL6H,YAAY,SACZG,MAAO8B,EAAO+G,MACd/I,SAAU8B,EACVS,OAAQR,MAGZ,cAAC,IAAKE,KAAN,CACEC,eAAgBC,EAAc,WAAY7J,EAASC,GACnD6J,KAAO9J,EAAQ2Q,SAAgB1Q,EAAO0Q,SAAZ,GAC1B5G,aAAW,EAHb,SAKE,cAAC,IAAD,CACE5L,GAAG,WACH6L,OAAQ,cAAC4G,EAAA,EAAD,IACRhR,KAAK,QACLzC,KAAK,WACLsK,YAAY,uCACZG,MAAO8B,EAAOiH,SACdjJ,SAAU8B,EACVS,OAAQR,MAGZ,eAAC,IAAKE,KAAN,WACG4G,IAAiBD,GAAW,yEAC7B,cAAC,EAAD,CACEb,SAAUc,EACV5L,QAAS0L,EACTlT,KAAK,UACLyC,KAAK,QAJP,iGASF,cAAC,IAAD,CAAMF,UAAU,mBAAmBuH,GAAG,gBAAtC,mICrEK,eAAiC,IAA9BjJ,EAA6B,EAA7BA,OAAQ0L,EAAqB,EAArBA,OAAQzJ,EAAa,EAAbA,OAC1B4Q,EAAQ,CACZJ,MAAO,SAAC7I,GACDA,EAEO,4CAA4CkJ,KAAKlJ,KAC3D3H,EAAOwQ,MAAQ,2DAFfxQ,EAAOwQ,MAAQ,qDAKnBE,SAAU,SAAC/I,GACJA,EAGF5J,GACA,sCAAsC8S,KAAKlJ,KAE5C3H,EAAO0Q,SAAW3S,EAAS,wFAAoB,wHAL/CiC,EAAO0Q,SAAW,mFAQtBI,WAAY,SAACnJ,GACN5J,GAAU4J,IAAU8B,EAAOiH,WAC9B1Q,EAAO8Q,WAAa,6GAGxB9O,SAAU,SAAC2F,GACJ5J,GAAW4J,IACd3H,EAAOgC,SAAW,8IAKxBtD,OAAOD,KAAKgL,GAAQsH,SAAQ,SAACjR,GAAD,OAAS8Q,EAAM9Q,IAAQ8Q,EAAM9Q,GAAK2J,EAAO3J,QC7BxDqQ,GCMYa,YAAW,CACpCC,oBAAoB,EACpBC,iBAAkB,iBAAO,CACvBV,MAAO,GACPE,SAAU,KAEZS,SAAU,SAAC1H,GACT,IAAIzJ,EAAS,GAIb,OAFAoR,GAAa,CAAErT,QAAQ,EAAM0L,SAAQzJ,WAE9BA,GAEToQ,aAAc,SAAC3G,EAAD,GAAuC,IAA5B4H,EAA2B,EAA3BA,cAAe7R,EAAY,EAAZA,MACtCL,EACG+L,SAASoG,GAAY7E,eAAehD,IACpC6B,MAAK,YACa,YADG,EAAbkB,QAEHhN,EAAM+R,QAAQC,KAAK,KAGvBH,GAAc,MAEfrF,OAAM,WACLqF,GAAc,OAGpBI,YAAa,aA3BYT,CA4BxBb,I,8BC+GYuB,I,OAjIU,SAAClS,GAAW,IAEjCiK,EAOEjK,EAPFiK,OACA1J,EAMEP,EANFO,QACAC,EAKER,EALFQ,OACAuJ,EAIE/J,EAJF+J,aACAC,EAGEhK,EAHFgK,WACA4G,EAEE5Q,EAFF4Q,aACAE,EACE9Q,EADF8Q,aAEF,OACE,gCACE,sBAAK7Q,UAAU,YAAf,UACE,oGACA,+QAEF,cAAC,EAAD,UAEI,eAAC,IAAD,CAAM8Q,SAAUH,EAAhB,UACE,cAAC,GAAD,CACE9T,KAAK,QACLoJ,KAAM,cAAC+K,EAAA,EAAD,IACNlH,aAAcA,EACdC,WAAYA,EACZhC,YAAa,SACbzH,QAASA,EACTC,OAAQA,EACRyJ,OAAQA,EACRvM,KAAK,SAEP,cAAC,GAAD,CACEZ,KAAK,WACLoJ,KAAM,cAACiM,GAAA,EAAD,IACNpI,aAAcA,EACdC,WAAYA,EACZhC,YAAa,uEACbzH,QAASA,EACTC,OAAQA,EACRyJ,OAAQA,EACRvM,KAAK,SAUP,cAAC,IAAKwM,KAAN,CACEC,eAAgBC,EAAc,WAAY7J,EAASC,GACnD6J,KAAO9J,EAAQ2Q,SAAgB1Q,EAAO0Q,SAAZ,GAC1BE,MAAO,CACL,CACEgB,UAAU,EACVjU,QAAS,uGANf,SAUE,cAAC,IAAMkU,SAAP,CACE3T,GAAG,WACH5B,KAAK,WACLY,KAAK,WACLyK,MAAO8B,EAAOiH,SACdjJ,SAAU8B,EACVS,OAAQR,EACR7J,KAAK,QACL6H,YAAY,uCACZuC,OAAQ,cAAC4G,EAAA,EAAD,IACRmB,WAAY,SAAC9D,GAAD,OACVA,EAAU,cAAC+D,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,SAIjC,cAAC,IAAKtI,KAAN,CACEC,eAAgBC,EAAc,aAAc7J,EAASC,GACrD6J,KAAO9J,EAAQ+Q,WAAkB9Q,EAAO8Q,WAAZ,GAC5BxU,KAAK,WACLsU,MAAO,CACL,CACEgB,UAAU,EACVjU,QAAS,mHAPf,SAWE,cAAC,IAAMkU,SAAP,CACE3T,GAAG,aACHyB,KAAK,QACLrD,KAAK,aACLY,KAAK,WACLyK,MAAO8B,EAAOiH,SACdjJ,SAAU8B,EACVS,OAAQR,EACRhC,YAAY,8FACZuC,OAAQ,cAAC4G,EAAA,EAAD,IACRmB,WAAY,SAAC9D,GAAD,OACVA,EAAU,cAAC+D,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,SAIjC,cAAC,IAAKtI,KAAN,UACA,cAAC,EAAD,CACI8F,SAAUc,EACV5L,QAAS0L,EACTlT,KAAK,UACLyC,KAAK,QAJT,sHASA,cAAC,IAAD,CAAMqH,GAAG,SAASvH,UAAU,mBAA5B,wGC9HGiS,GCKAV,YAAW,CAExBC,oBAAoB,EACpBC,iBAAkB,iBAAO,CACvBV,MAAO,GACPxO,SAAU,GACV0O,SAAU,GACVI,WAAY,KAEdK,SAAU,SAAC1H,GACT,IAAIzJ,EAAS,GAGb,OAFAoR,GAAa,CAAErT,QAAQ,EAAO0L,SAAQzJ,WAE/BA,GAGToQ,aAAc,SAAC3G,EAAD,GAAuC,IAA5B4H,EAA2B,EAA3BA,cAAe7R,EAAY,EAAZA,MACtCL,EACG+L,SAASoG,GAAY3E,sBAAsBlD,IAC3C6B,MAAK,YAAiB,IAAdkB,EAAa,EAAbA,OACPyF,YAAW,WACM,YAAXzF,GACFhN,EAAM+R,QAAQC,KAAK,0BAEpB,KAEHH,GAAc,MAEfrF,OAAM,WACLqF,GAAc,OAIpBI,YAAa,oBAjCAT,CAkCZU,I,UCjCGQ,I,OAAiB,SAAC,GAAwB,IAAtBjQ,EAAqB,EAArBA,KAAMkQ,EAAe,EAAfA,SAC9B,OAAIlQ,EACEkQ,EACK,CACL3F,OAAQ,UACRhM,MAAO,wCACP7C,QAAS,6JAGJ,CACL6O,OAAQ,QACRhM,MAAO,uCACP7C,QAAS,wOAIN,CACL6O,OAAQ,OACRhM,MAAO,oCACP7C,QAAQ,mqBAoECyU,GA/DQ,SAAC,GAA2B,IAAzBvV,EAAwB,EAAxBA,SAAU0U,EAAc,EAAdA,QAC5BtP,EAAOpF,EAASwV,OAAOtV,MAAM,SAAS,GADI,EAEhB6G,oBAAS,GAFO,mBAEzCuO,EAFyC,KAE/BG,EAF+B,OAGhB1O,qBAAW3B,GAHK,mBAGzCsQ,EAHyC,KAG/BC,EAH+B,OAIxB5O,mBACtBsO,GAAe,CAAEjQ,OAAMsQ,WAAUJ,cALa,mBAIzCM,EAJyC,KAInCC,EAJmC,KAQ1CC,EAAY,SAAC,GAA4B,IAA1BJ,EAAyB,EAAzBA,SAAUJ,EAAe,EAAfA,SAC7BO,EAAQR,GAAe,CAAEjQ,OAAMsQ,WAAUJ,cACzCG,EAAYH,GACZK,EAAYD,IAGdpO,qBAAU,WACJlC,GACFoK,GACcpK,GACXqJ,MAAK,WACJqH,EAAU,CAAER,UAAU,EAAMI,UAAU,OAEvCvG,OAAM,WACL2G,EAAU,CAAER,UAAU,EAAOI,UAAU,SAG5C,IAGH,IAAIK,EAAW,yDAAqDhW,OAAOkB,aAAP,YACpE,OACE,qBAAK2B,UAAU,eAAf,SACE,eAAC,EAAD,WACI8S,EAeA,qBAAK9S,UAAU,wBAAf,SACE,cAAC,KAAD,CAAME,KAAK,YAfb,cAAC,KAAD,CACE6M,OAAQiG,EAAKjG,OACbhM,MAAOiS,EAAKjS,MACZqS,SAAUJ,EAAK9U,QACfmV,MACkB,YAAhBL,EAAKjG,QACL2F,GACE,cAAC,IAAD,CAAQjV,KAAK,UAAUwH,QAAS,kBAAM6M,EAAQC,KAAK,WAAnD,8CAWNW,EAKA,GAJA,cAAC,IAAD,CAAQjU,GAAG,cAAchB,KAAK,UAAU6V,KAAMH,EAA9C,iI,OC9DKI,OAZf,WACE,OACI,yBAASvT,UAAU,OAAnB,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAOwT,OAAK,EAACC,KAAK,SAASC,UAAWhD,KACtC,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,gBAAgBC,UAAWzB,KAC7C,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,uBAAuBC,UAAWf,WC2B/CgB,I,OA3BF,WACX,OACE,yBAAS3T,UAAU,OAAnB,SACE,sBAAKA,UAAU,OAAf,UACE,cAAC,GAAD,IACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,wBACA,qBAAKA,UAAU,6BAAf,SACE,mBAAGA,UAAU,+BAAb,SACE,cAAC,GAAD,QAGJ,cAAC,IAAD,CAAQvC,KAAK,OAAOuI,MAAM,SAASC,KAAM,cAACC,EAAA,EAAD,SAE3C,qBAAKlG,UAAU,wBAAf,SACE,cAAC,GAAD,MAEF,qBAAKA,UAAU,qBAAf,SACE,cAAC,GAAD,gBCSGqN,gBAAQ,kBAAe,CAAE/O,OAAjB,EAAG6D,KAA2B7D,UAAtC+O,EAjCH,SAACtN,GAAW,IACdzB,EAAWyB,EAAXzB,OAER,OACE,sBAAK0B,UAAU,UAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEwT,OAAK,EACLC,KAAM,CAAC,SAAU,gBAAiB,wBAClCC,UAAWH,KAEb,cAAC,IAAD,CACEE,KAAK,IACLG,OAAQ,kBAAOtV,EAAS,cAAC,GAAD,IAAW,cAAC,IAAD,CAAUiJ,GAAG,mBAItD,sBAAK9I,GAAG,SAAR,UACN,qBAAK4D,IAAI,4CAA4CC,IAAI,OAAO0C,MAAM,UACtE,mBAAGsO,KAAK,wBAAR,wBACA,6CACA,sBAAKtT,UAAU,aAAf,UACI,8CACJ,mBAAGsT,KAAK,oCAAR,6BACA,mBAAGA,KAAK,qCAAR,6BACA,mBAAGA,KAAK,4BAAR,uCCxBA5T,EAAM+L,SAASoG,GAAYlF,iBAE3BkH,IAASD,OACP,cAAC,IAAD,CAAUlU,MAAOA,EAAjB,SACE,cAAC,IAAMoU,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.2c9c20ff.chunk.js","sourcesContent":["  import { combineReducers } from \"redux\";\r\n\r\nconst reducers = [\"messages\", \"dialogs\", \"user\"];\r\n\r\nexport default combineReducers(\r\n  reducers.reduce((initial, name) => {\r\n    initial[name] = require(`./${name}`).default;\r\n    return initial;\r\n  }, {})\r\n);","\r\nconst initialState = {\r\n    items: [],\r\n    currentDialogId: window.location.pathname.split('dialog/')[1],\r\n    isLoading: false,\r\n  };\r\n  \r\n  export default (state = initialState, { type, payload }) => {\r\n\r\n    switch (type) {\r\n      case 'DIALOGS:SET_ITEMS':\r\n        return {\r\n          ...state,\r\n          items: payload,\r\n        };\r\n      case 'DIALOGS:LAST_MESSAGE_READED_STATUS':\r\n        return {\r\n          ...state,\r\n          items: state.items.map(dialog => {\r\n            if (dialog._id === payload.dialogId) {\r\n              dialog.lastMessage.readed = true;\r\n            }\r\n            return dialog;\r\n          }),\r\n        };\r\n      case 'DIALOGS:SET_CURRENT_DIALOG_ID':\r\n        return {\r\n          ...state,\r\n          currentDialogId: payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","const initialState = {\r\n  items: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"MESSAGES:ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items, payload],\r\n      };\r\n    case \"MESSAGES:SET_ITEMS\":\r\n      return {\r\n        ...state,\r\n        items: payload,\r\n        isLoading: false,\r\n      };\r\n    case \"MESSAGES:SET_IS_LOADING\":\r\n      return {\r\n        ...state,\r\n        isLoading: payload,\r\n      };\r\n    case \"MESSAGES:REMOVE_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(message => message._id !== payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\r\nconst initialState = {\r\n  data: null,\r\n  token: window.localStorage.token,\r\n  isAuth: !!window.localStorage.token\r\n  // isAuth:false; ?\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"USER:SET_DATA\":\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n        isAuth: true,\r\n        token: window.localStorage.token\r\n      };\r\n    case \"USER:SET_IS_AUTH\":\r\n      return {\r\n        ...state,\r\n        isAuth: payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","var map = {\n\t\"./dialogs\": 163,\n\t\"./dialogs.js\": 163,\n\t\"./indexReducers\": 118,\n\t\"./indexReducers.js\": 118,\n\t\"./messages\": 164,\n\t\"./messages.js\": 164,\n\t\"./user\": 165,\n\t\"./user.js\": 165\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 239;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from './reducers/indexReducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { Button as BaseButton } from \"antd\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <BaseButton\r\n      {...props}\r\n      className={classNames(\"button\", props.className, {\r\n        \"button--large\": props.size === \"large\",\r\n      })}\r\n    ></BaseButton>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classNames from 'classnames';\r\n\r\nimport \"./Block.scss\";\r\n\r\nfunction Block({ children, className }) {\r\n  return <div className={classNames(\"block\", className)}>{children}</div>;\r\n}\r\n\r\nexport default Block;\r\n","export default (key, touched, errors) => {\r\n  if (touched[key]) {\r\n    if (errors[key]) {\r\n      return 'error';\r\n    } else {\r\n      return \"success\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n  };","export default (number) => {\r\n  const mins = Math.floor(number / 60);\r\n  const secs = (number % 60).toFixed();\r\n  return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n};\r\n","import { notification } from \"antd\";\r\n\r\nexport default ({ text, type = \"info\", title, duration = 3 }) =>\r\n  notification[type]({\r\n    message: title,\r\n    description: text,\r\n    duration,\r\n  });\r\n","export default __webpack_public_path__ + \"static/media/readed.8776dd59.svg\";","export default __webpack_public_path__ + \"static/media/no-read.c7c02e84.svg\";","export default __webpack_public_path__ + \"static/media/readedWhite.3b3841a1.svg\";","export default __webpack_public_path__ + \"static/media/no-readWhite.9c692567.svg\";","export default __webpack_public_path__ + \"static/media/wave.a4b496b3.svg\";","export default __webpack_public_path__ + \"static/media/play.870c9d04.svg\";","export default __webpack_public_path__ + \"static/media/pause.2b5edbe9.svg\";","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n\r\n//import { Button as BaseButton } from \"antd\";\r\n\r\nconst getFreshDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n\r\n  return new Date(\r\n    date.getFullYear(),\r\n    date.getMonth(),\r\n    date.getDate(),\r\n    date.getHours(),\r\n    date.getMinutes(),\r\n    date.getSeconds()\r\n  );\r\n};\r\n\r\nconst Time = ({ date }) => (\r\n  <Fragment>\r\n    {formatDistanceToNow(getFreshDate(date), {\r\n      addSuffix: true,\r\n      locale: ruLocale,\r\n    })}\r\n  </Fragment>\r\n);\r\n\r\nTime.propTypes = {\r\n  date: PropTypes.string,\r\n};\r\n\r\nexport default Time;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { generateAvatarFromHash } from '../../utils/helpers';\r\n//import classNames from 'classnames';\r\n\r\nimport './Avatar.scss';\r\n\r\nconst Avatar = ({ user }) => {\r\n  if (user.avatar) {\r\n    return <img className=\"avatar\" src={user.avatar} alt={`Avatar ${user.fullname}`} />;\r\n  } else {\r\n    const { color, colorLighten } = generateAvatarFromHash(user._id);\r\n    // 'd95b2b8d46ebc680284bb1e90692f8d4'\r\n    const firstChar = user.fullname[0].toUpperCase();\r\n    return (\r\n      <div\r\n        style={{ background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)` }}\r\n        className=\"avatar avatar--symbol\">\r\n        {firstChar}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nAvatar.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Avatar;\r\n","import tinycolor from \"tinycolor2\";\r\n\r\nconst getCorrectIndex = (number) => {\r\n  if (number > 255) {\r\n    return 255;\r\n  }\r\n  if (number < 0) {\r\n    return 0;\r\n  }\r\n  return number > 255 ? 255 : number < 0 ? 0 : number;\r\n};\r\n\r\nexport default (hash) => {\r\n  const [r, g, b] = hash\r\n    .substr(0, 3)\r\n    .split(\"\")\r\n    .map((char) => getCorrectIndex(char.charCodeAt(0)));\r\n\r\n  return {\r\n    color: tinycolor({ r, g, b }).lighten(10).saturate(10).toHexString(),\r\n    colorLighten: tinycolor({ r, g, b }).lighten(30).saturate(30).toHexString(),\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport readedSvg from \"../../assets/img/readed.svg\";\r\nimport noReadedSvg from \"../../assets/img/no-read.svg\";\r\n// import formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\n// import ruLocale from \"date-fns/locale/ru\";\r\n\r\n//import { Button as BaseButton } from \"antd\";\r\n\r\nconst IconReaded = ({ isMe, isReaded }) => {\r\n  if (isMe) {\r\n    if (isReaded) {\r\n      return (\r\n        <img\r\n          className=\"message__icon-readed\"\r\n          src={readedSvg}\r\n          alt=\"Readed icon\"\r\n        />\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <img\r\n            className=\"message__icon-readed message__icon-readed--no\"\r\n            src={noReadedSvg}\r\n            alt=\"No readed icon\"\r\n          />\r\n      );\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\n// isMe && (isReaded ? (\r\n//   <img className=\"message__icon-readed\" src={readedSvg} alt=\"Readed icon\" />\r\n// ) : (\r\n//   <img\r\n//     className=\"message__icon-readed message__icon-readed--no\"\r\n//     src={noReadedSvg}\r\n//     alt=\"No readed icon\"\r\n//   />\r\n// ));\r\n\r\nIconReaded.propTypes = {\r\n  isMe: PropTypes.bool,\r\n  isReaded: PropTypes.bool,\r\n};\r\n\r\nexport default IconReaded;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Emoji } from \"emoji-mart\";\r\nimport { Popover, Button } from \"antd\";\r\nimport { EllipsisOutlined } from \"@ant-design/icons\";\r\n\r\nimport { convertCurrentTime } from \"../../utils/helpers\";\r\n\r\nimport readedSvg from \"../../assets/img/readed.svg\";\r\nimport noReadedSvg from \"../../assets/img/no-read.svg\";\r\nimport readedSvgWhite from \"../../assets/img/readedWhite.svg\";\r\nimport noReadedSvgWhite from \"../../assets/img/no-readWhite.svg\";\r\nimport waveSvg from \"../../assets/img/wave.svg\";\r\nimport playSvg from \"../../assets/img/play.svg\";\r\nimport pauseSvg from \"../../assets/img/pause.svg\";\r\n\r\nimport Time from \"../Time/indexTime\";\r\nimport Avatar from \"../Avatar/indexAvatar\";\r\n\r\nimport \"./Message.scss\";\r\nimport IconReaded from \"../IconReaded/indexIconReaded\";\r\n\r\nconst MessageAudio = ({ audioSrc }) => {\r\n  const audioElem = useRef(null);\r\n\r\n  const [isPlaying, setIsPlaing] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  const togglePlay = () => {\r\n    if (!isPlaying) {\r\n      audioElem.current.play();\r\n    } else {\r\n      audioElem.current.pause();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    audioElem.current.volume = \"0.1\";\r\n    audioElem.current.addEventListener(\r\n      \"playing\",\r\n      () => {\r\n        setIsPlaing(true);\r\n      },\r\n      false\r\n    );\r\n    audioElem.current.addEventListener(\r\n      \"ended\",\r\n      () => {\r\n        setIsPlaing(false);\r\n        setProgress(0);\r\n        setCurrentTime(0);\r\n      },\r\n      false\r\n    );\r\n    audioElem.current.addEventListener(\r\n      \"pause\",\r\n      () => {\r\n        setIsPlaing(false);\r\n      },\r\n      false\r\n    );\r\n    audioElem.current.addEventListener(\"timeupdate\", () => {\r\n      const duration = (audioElem.current && audioElem.current.duration) || 0;\r\n      setCurrentTime(audioElem.current.currentTime);\r\n\r\n      setProgress((audioElem.current.currentTime / duration) * 100);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"message__audio\">\r\n      <audio volume=\"0.1\" ref={audioElem} src={audioSrc} preload=\"auto\" />\r\n      <div\r\n        className=\"message__audio-progress\"\r\n        style={{ width: progress + \"%\" }}\r\n      ></div>\r\n      <div className=\"message__audio-info\">\r\n        <div className=\"message__audio-btn\">\r\n          <button onClick={togglePlay}>\r\n            {isPlaying ? (\r\n              <img src={pauseSvg} alt=\"Pause svg\" />\r\n            ) : (\r\n              <img src={playSvg} alt=\"Play svg\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"message__audio-wave\">\r\n          <img src={waveSvg} alt=\"Wave svg\" />\r\n        </div>\r\n        <span className=\"message__audio-duration\">\r\n          {convertCurrentTime(currentTime)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nfunction Message({\r\n  avatar,\r\n  user,\r\n  text,\r\n  date,\r\n  audio,\r\n  isMe,\r\n  isReaded,\r\n  attachments,\r\n  isTyping,\r\n  onRemoveMessage\r\n}) {\r\n  return (\r\n    <div\r\n      className={classNames(\"message\", {\r\n        \"message--isme\": isMe,\r\n        \"message--is-typing\": isTyping,\r\n        \"message--is-audio\": audio,\r\n        \"message--image\": attachments && attachments.length === 1,\r\n      })}\r\n    >\r\n      <Popover\r\n          content={\r\n            <div>\r\n              <Button onClick={onRemoveMessage}>Удалить</Button>\r\n            </div>\r\n          }\r\n          trigger=\"click\"\r\n        >\r\n          <div className=\"message__icon-actions\">\r\n            <Button type=\"link\" shape=\"circle\" icon={<EllipsisOutlined />} />\r\n          </div>\r\n        </Popover>\r\n      <div className=\"message__avatar\">\r\n        <Avatar user={user} />\r\n      </div>\r\n      <div className=\"message__container\">\r\n        {(audio || text || isTyping) && (\r\n          <div className=\"message__bubble\">\r\n            {text && <p className=\"message__text\">{text}</p>}\r\n            {isTyping && (\r\n              <div className=\"message__typing\">\r\n                <span />\r\n                <span />\r\n                <span />\r\n              </div>\r\n            )}\r\n            {audio && <MessageAudio audioSrc={audio} />}\r\n            <div className=\"chat-bubble\"></div>\r\n            <div className=\"icons_read_status-wrapper\">\r\n              <IconReaded\r\n                isMe={isMe}\r\n                isReaded={isReaded}\r\n                className=\"message__check-icon--readed\"\r\n              />\r\n              <img\r\n                src={\r\n                  isMe\r\n                    ? isReaded\r\n                      ? readedSvg\r\n                      : noReadedSvg\r\n                    : isReaded\r\n                    ? readedSvgWhite\r\n                    : noReadedSvgWhite\r\n                }\r\n                alt=\"Check icon\"\r\n                className=\"message__check-icon\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {attachments && (\r\n          <div className=\"message__attachments\">\r\n            {attachments.map((item, index) => (\r\n              <div key={index} className=\"message__attachments-item\">\r\n                <img src={item.url} alt={item.filename} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        {date && (\r\n          <span className=\"message__date\">\r\n            <Time date={date} />\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMessage.defaultProps = {\r\n  user: {},\r\n};\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.object,\r\n  user: PropTypes.object,\r\n\r\n  isMe: PropTypes.bool,\r\n  isReaded: PropTypes.bool,\r\n  isTyping: PropTypes.bool,\r\n  audio: PropTypes.string,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Empty, Spin } from \"antd\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { Message } from \"../../components/indexComponents\";\r\n\r\nimport \"./Messages.scss\";\r\n\r\nconst Messages = ({ onRemoveMessage, blockRef, isLoading, items, user }) => {\r\n  return (\r\n    <div\r\n      ref={blockRef}\r\n      className={classNames(\"messages\", { \"messages--loading\": isLoading })}\r\n    >\r\n      {isLoading ? (\r\n        <Spin size=\"large\" tip=\"Loading...\"></Spin>\r\n      ) : items && !isLoading ? (\r\n        items.length > 0 ? (\r\n          items.map((item) => (\r\n            <Message\r\n              key={item._id}\r\n              {...item}\r\n              isMe={user._id !== item.user._id}\r\n              onRemoveMessage={onRemoveMessage.bind(this, item._id)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Empty description=\"Диалог пуст\" />\r\n        )\r\n      ) : (\r\n        <Empty description=\"Нет сообщений\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMessages.propTypes = {\r\n  items: PropTypes.array,\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport format from \"date-fns/format\";\r\nimport isToday from \"date-fns/isToday\";\r\nimport IconReaded from \"../IconReaded/indexIconReaded\";\r\nimport Avatar from \"../Avatar/indexAvatar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst getFreshDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n\r\n  return new Date(\r\n    date.getFullYear(),\r\n    date.getMonth(),\r\n    date.getDate(),\r\n    date.getHours(),\r\n    date.getMinutes(),\r\n    date.getSeconds()\r\n  );\r\n};\r\n\r\nconst getMessageTime = (createdAtRaw) => {\r\n  const createdAt = getFreshDate(createdAtRaw);\r\n  if (isToday(createdAt)) {\r\n    return format(createdAt, \"HH:mm\");\r\n  } else {\r\n    return format(createdAt, \"mm.dd.yyyy\");\r\n  }\r\n};\r\n\r\nconst DialogItem = ({\r\n  _id,\r\n  user,\r\n  undread,\r\n  created_at,\r\n  text,\r\n  isMe,\r\n  currentDialogId,\r\n  onSelect,\r\n  lastMessage\r\n}) => (\r\n<Link to={`/dialog/${_id}`}>\r\n    <div\r\n      className={classNames(\"dialogs__item\", {\r\n        \"dialogs__item--online\": lastMessage.user.isOnline,\r\n        \"dialogs__item--selected\": currentDialogId === _id\r\n      })}\r\n      onClick={onSelect.bind(this, _id)}\r\n    >\r\n      <div className=\"dialogs__item-avatar\">\r\n        <Avatar user={lastMessage.user} />\r\n      </div>\r\n      <div className=\"dialogs__item-info\">\r\n        <div className=\"dialogs__item-info-top\">\r\n          <b>{lastMessage.user.fullname}</b>\r\n          <span>{getMessageTime(created_at)}</span>\r\n          </div>\r\n        <div className=\"dialogs__item-info-bottom\">\r\n          <p>{lastMessage.text}</p>\r\n          {isMe && <IconReaded isMe={true} isReaded={false} />}\r\n          {lastMessage.undread > 0 && (\r\n            <div className=\"dialogs__item-info-bottom-count\">\r\n              {lastMessage.undread > 9 ? \"+9\" : lastMessage.undread}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport { Input, Empty } from \"antd\";\r\n\r\nimport DialogItem from \"../DialogItem/indexDialogItem\";\r\n\r\nimport \"./Dialogs.scss\";\r\n\r\nconst Dialogs = ({ items, userId, onSearch, inputValue, currentDialogId, onSelectDialog }) => (\r\n  <div className=\"dialogs\">\r\n    <div className=\"dialogs__search\">\r\n      <Input.Search\r\n        placeholder=\"Поиск среди контактов\"\r\n        onChange={e => onSearch(e.target.value)}\r\n        value={inputValue}\r\n      />\r\n    </div>\r\n    \r\n    {items.length ? (\r\n      orderBy(items, [\"desc\"]).map(item => (\r\n        <DialogItem\r\n          key={item._id}\r\n          isMe={item.author._id === userId}\r\n          userId={userId}\r\n          onSelect = {onSelectDialog}\r\n          currentDialogId={currentDialogId}\r\n          user={item.partner}\r\n          created_at={item.lastMessage.createdAt}\r\n          text={item.lastMessage.text}\r\n          {...item}\r\n        />\r\n      ))\r\n    ) : (\r\n      <Empty\r\n        image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n        description=\"Ничего не найдено\"\r\n      />\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport './Status.scss';\r\n\r\nconst Status = ({ online, fullname }) => (\r\n  <div className=\"chat__dialog-header-center\">\r\n    <b className=\"chat__dialog-header-username\">{fullname}</b>\r\n    <div className=\"chat__dialog-header-status\">\r\n      <span className={classNames(\"status\", { \"status--online\": online })}>\r\n        {online ? \"онлайн\" : \"офлайн\"}\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nStatus.propTypes = {\r\n  online: PropTypes.bool,\r\n};\r\n\r\nexport default Status;\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SmileOutlined, CameraOutlined, AudioOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input } from 'antd';\r\nimport { UploadField } from '@navjobs/upload';\r\nimport { Picker } from 'emoji-mart';\r\n\r\n\r\nimport \"./ChatInput.scss\";\r\n\r\nconst ChatInput = props =>{\r\n  const [value, setValue] = useState('');\r\n  const [emojiPikerVisible, setShowEmojiPiker] = useState(false);\r\n  const { onSendMessage, currentDialogId } = props;\r\n\r\n  const toggleEmojiPiker = () => {\r\n    setShowEmojiPiker(!emojiPikerVisible);\r\n  }\r\n\r\n  const handleSendMessage = e => {\r\n    if (e.keyCode === 13) {\r\n      onSendMessage(value, currentDialogId);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input\">\r\n      <div className=\"chat-input__smile-btn\">\r\n        {emojiPikerVisible && (\r\n          <div className=\"chat-input__emoji-piker\">\r\n            <Picker set='apple' />\r\n          </div>\r\n        )}\r\n        <Button onClick={toggleEmojiPiker} type=\"link\" shape=\"circle\" icon={<SmileOutlined />} />\r\n      </div>\r\n      <Input \r\n        onChange={e => setValue(e.target.value)} \r\n        onKeyUp={handleSendMessage}\r\n        size=\"large\" \r\n        placeholder=\"Введите текст сообщения...\" \r\n        value={value}\r\n\r\n      />\r\n      <div className=\"chat-input__actions\">\r\n        \r\n          <UploadField\r\n            onFiles={files => files}\r\n            containerProps={{\r\n              className: 'chat-input__actions-upload-btn'\r\n            }}\r\n            uploadProps={{\r\n              accept: '.jpg,.jpeg,.png,.gif,.bmp',\r\n              multiple: 'multiple'\r\n            }}\r\n          ><Button type=\"link\" shape=\"circle\" icon={<CameraOutlined />}/>\r\n          </UploadField>\r\n        \r\n        {value ? <Button type=\"link\" shape=\"circle\" icon={<CheckCircleOutlined />} /> : <Button type=\"link\" shape=\"circle\" icon={<AudioOutlined />} />}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nChatInput.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default ChatInput;\r\n","import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nimport { validateField } from \"../../utils/helpers/index\";\r\n\r\nconst FormField = ({\r\n  name,\r\n  placeholder,\r\n  handleChange,\r\n  handleBlur,\r\n  icon,\r\n  touched,\r\n  errors,\r\n  values,\r\n  type\r\n}) => {\r\n  return (\r\n    <Form.Item\r\n    validateStatus={validateField(name, touched, errors)}\r\n    help={!touched[name] ? \"\" : errors[name]}\r\n    hasFeedback\r\n  >\r\n      <Input\r\n        id={name}\r\n        name={name}\r\n        size=\"large\"\r\n        placeholder={placeholder}\r\n        prefix={icon}\r\n        value={values[name]}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        type={type}\r\n      />\r\n    </Form.Item>\r\n  );\r\n};\r\nexport default FormField;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = window.location.origin;\r\naxios.defaults.headers.common['token'] = window.localStorage.token;\r\n\r\nwindow.axios = axios;\r\n\r\nexport default axios;","import { axios } from \"../../core/indexCore\";\r\n\r\nexport default {\r\n  getAll: () => axios.get(\"/dialogs\"),\r\n  create: ({ partner, text }) => axios.post(\"/dialogs\", { partner, text }),\r\n};\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n/* eslint-disable no-undef */\r\nimport { axios } from \"../../core/indexCore\";\r\n\r\nexport default {\r\n  getAllByDialogId: (id) => axios.get(\"/messages?dialog=\" + id),\r\n  send: (text, dialogId) =>\r\n    axios.post(\"/messages\", {\r\n      text: text,\r\n      dialog: dialogId,\r\n    }),\r\n  removeById: (id) => axios.delete(\"/messages?id=\" + id),\r\n};\r\n","import { axios } from \"../../core/indexCore\";\r\n\r\nexport default {\r\n  login: (postData) => axios.post(\"/user/login\", postData),\r\n  registration: (postData) => axios.post(\"/user/registration\", postData),\r\n  verifyHash: hash => axios.get(\"/user/verify?hash=\" + hash),\r\n  getMe: () => axios.get(\"/user/me/profile\"),\r\n  searchUser: (name) => axios.get(\"/user/search\"),\r\n};\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io(window.location.origin.replace(\"3000\", \"3003\"));\r\n\r\nexport default socket;\r\n","import { dialogsApi } from '../../utils/api/indexApi';\r\nimport socket from '../../core/socket';\r\n\r\nconst Actions = {\r\n  setDialogs: items => ({\r\n    type: 'DIALOGS:SET_ITEMS',\r\n    payload: items,\r\n  }),\r\n  updateReadedStatus: ({ userId, dialogId }) => ({\r\n    type: 'DIALOGS:LAST_MESSAGE_READED_STATUS',\r\n    payload: {\r\n      userId,\r\n      dialogId,\r\n    },\r\n  }),\r\n  setCurrentDialogId: id => dispatch => {\r\n    socket.emit('DIALOGS:JOIN', id);\r\n    dispatch({\r\n      type: 'DIALOGS:SET_CURRENT_DIALOG_ID',\r\n      payload: id,\r\n    });\r\n  },\r\n  fetchDialogs: () => dispatch => {\r\n    dialogsApi.getAll().then(({ data }) => {\r\n      dispatch(Actions.setDialogs(data));\r\n    });\r\n  },\r\n};\r\n\r\nexport default Actions;","import { messagesApi } from \"../../utils/api/indexApi\";\r\n\r\nconst Actions = {\r\n  setMessages: (items) => ({\r\n    type: \"MESSAGES:SET_ITEMS\",\r\n    payload: items,\r\n  }),\r\n  addMessage: (message) => (dispatch, getState) => {\r\n    const { dialogs } = getState();\r\n    const { currentDialogId } = dialogs;\r\n    if (currentDialogId === message.dialog._id) {\r\n      dispatch({\r\n        type: \"MESSAGES:ADD_MESSAGE\",\r\n        payload: message,\r\n      });\r\n    }\r\n  },\r\n  fetchSendMessage: (text, dialogId) => (dispatch) => {\r\n    messagesApi.send(text, dialogId);\r\n  },\r\n  setIsLoading: (bool) => ({\r\n    type: \"MESSAGES:SET_IS_LOADING\",\r\n    payload: bool,\r\n  }),\r\n  removeMessageById: (id) => (dispatch) => {\r\n    dispatch({\r\n      type: \"MESSAGES:REMOVE_MESSAGE\",\r\n      payload: id,\r\n    });\r\n    messagesApi\r\n      .removeById(id)\r\n      .then(({ data }) => {\r\n        \r\n      })\r\n      .catch(() => {\r\n        dispatch(Actions.setIsLoading(false));\r\n      });\r\n  },\r\n  fetchMessages: (dialogId) => (dispatch) => {\r\n    dispatch(Actions.setIsLoading(true));\r\n    messagesApi\r\n      .getAllByDialogId(dialogId)\r\n      .then(({ data }) => {\r\n        dispatch(Actions.setMessages(data));\r\n      })\r\n      .catch(() => {\r\n        dispatch(Actions.setIsLoading(false));\r\n      });\r\n  },\r\n};\r\n\r\nexport default Actions;\r\n","import { userApi } from \"../../utils/api/indexApi\";\r\nimport { openNotification } from \"./../../utils/helpers/index\";\r\n\r\nconst Actions = {\r\n  setUserData: (data) => ({\r\n    type: \"USER:SET_DATA\",\r\n    payload: data,\r\n  }),\r\n  setIsAuth: (bool) => ({\r\n    type: \"USER:SET_IS_AUTH\",\r\n    payload: bool,\r\n  }),\r\n  fetchUserData: () => (dispatch) => {\r\n    userApi\r\n      .getMe()\r\n      .then(({ data }) => {\r\n        dispatch(Actions.setUserData(data));\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 403) {\r\n          dispatch(Actions.setUserData(false));\r\n          delete window.localStorage.token;\r\n        }\r\n      });\r\n  },\r\n  fetchUserLogin: (postData) => (dispatch) => {\r\n    return userApi\r\n      .login(postData)\r\n      .then(({ data }) => {\r\n        const { token } = data;\r\n        openNotification({\r\n          title: \"Отлично!\",\r\n          text: \"Авторизация успешна.\",\r\n          type: \"success\",\r\n        });\r\n        window.axios.defaults.headers.common[\"token\"] = token;\r\n        window.localStorage[\"token\"] = token;\r\n        dispatch(Actions.fetchUserData());\r\n        dispatch(Actions.setIsAuth(true));\r\n        return data;\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response.status === 403) {\r\n          openNotification({\r\n            title: \"Ошибка при авторизации!\",\r\n            text: \"Неверный логин или пароль\",\r\n            type: \"error\",\r\n          });\r\n        }\r\n      });\r\n  },\r\n  fetchUserRegistration: (postData) => (dispatch) => {\r\n    return userApi.registration(postData).then(({ data }) => {\r\n      window.localStorage[\"email_hash\"] = data.obj.confirm_hash;\r\n      return data;\r\n    });\r\n  },\r\n};\r\n\r\nexport default Actions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { dialogsActions } from \"../redux/actions/indexActions\";\r\nimport { Dialogs as BaseDialogs } from \"../components/indexComponents\";\r\n\r\nimport socket from \"../core/socket.js\";\r\n\r\nconst Dialogs = ({\r\n  fetchDialogs,\r\n  currentDialogId,\r\n  setCurrentDialogId,\r\n  items,\r\n  userId,\r\n}) => {\r\n  const [inputValue, setValue] = useState(\"\");\r\n  const [filtred, setFiltredItems] = useState(Array.from(items));\r\n\r\n  const onChangeInput = (value = \"\") => {\r\n    setFiltredItems(\r\n      items.filter(\r\n        (dialog) =>\r\n          dialog.author.fullname.toLowerCase().indexOf(value.toLowerCase()) >=\r\n            0 ||\r\n          dialog.partner.fullname.toLowerCase().indexOf(value.toLowerCase()) >=\r\n            0\r\n      )\r\n    );\r\n    setValue(value);\r\n  };\r\n\r\n  const onNewDialog = () => {\r\n    fetchDialogs();\r\n  };\r\n\r\n  window.fetchDialogs = fetchDialogs;\r\n  useEffect(() => {\r\n    if (items.length) {\r\n      onChangeInput();\r\n    }\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    fetchDialogs();\r\n    // if (!items.length) {\r\n    //   fetchDialogs();\r\n    // } else {\r\n    //   setFiltredItems(items);\r\n    // }\r\n    socket.on(\"SERVER:DIALOG_CREATED\", onNewDialog);\r\n    socket.on(\"SERVER:NEW_MESSAGE \", onNewDialog);\r\n    return () => {\r\n      socket.removeListener(\"SERVER:DIALOG_CREATED\", onNewDialog);\r\n      socket.removeListener(\"SERVER:NEW_MESSAGE \", onNewDialog);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <BaseDialogs\r\n      userId={userId}\r\n      items={filtred}\r\n      onSearch={onChangeInput}\r\n      inputValue={inputValue}\r\n      onSelectDialog={setCurrentDialogId}\r\n      currentDialogId={currentDialogId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(({ dialogs }) => dialogs, dialogsActions)(Dialogs);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { messagesActions } from \"../redux/actions/indexActions\";\r\nimport { Messages as BaseMessages } from \"../components/indexComponents\";\r\n\r\nimport socket from \"../core/socket\";\r\n\r\nconst Dialogs = ({\r\n    currentDialogId,\r\n    fetchMessages,\r\n    addMessage,\r\n    items,\r\n    user,\r\n    isLoading,\r\n    removeMessageById\r\n  }) => {\r\n    const messagesRef = useRef(null);\r\n  \r\n    const onNewMessage = data => {\r\n      addMessage(data);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      if (currentDialogId) {\r\n        fetchMessages(currentDialogId);\r\n      }\r\n  \r\n      socket.on(\"SERVER:NEW_MESSAGE \", onNewMessage);\r\n  \r\n      return () => socket.removeListener(\"SERVER:NEW_MESSAGE \", onNewMessage);\r\n    }, [currentDialogId]);\r\n  \r\n    useEffect(() => {\r\n      messagesRef.current.scrollTo(0, 999999);\r\n    }, [items]);\r\n  \r\n    return ( <BaseMessages\r\n        user={user}\r\n        blockRef={messagesRef}\r\n        items={items}\r\n        isLoading={isLoading}\r\n        onRemoveMessage={removeMessageById}\r\n      />\r\n    );\r\n  };\r\n\r\nexport default connect(\r\n    ({ dialogs, messages, user }) => ({\r\n    currentDialogId: dialogs.currentDialogId,\r\n    items: messages.items,\r\n    isLoading: messages.isLoading,\r\n    user: user.data\r\n  }),\r\n  messagesActions\r\n)(Dialogs);","import React from \"react\";\r\nimport { ChatInput as ChatInputBase } from \"../components/indexComponents\";\r\nimport { connect } from \"react-redux\";\r\nimport { messagesActions } from \"../redux/actions/indexActions\";\r\n\r\nconst ChatInput = ({ fetchSendMessage, currentDialogId }) => {\r\n  return (\r\n    <ChatInputBase\r\n      onSendMessage={fetchSendMessage}\r\n      currentDialogId={currentDialogId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ dialogs }) => dialogs,\r\n  messagesActions\r\n)(ChatInput);","import React from \"react\";\r\nimport { Status as StatusBase } from \"../components/indexComponents\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Status = ({ currentDialogId, user, dialogs }) => {\r\n  if (!dialogs.length || !currentDialogId) {\r\n    return null;\r\n  }\r\n\r\n  const currentDialogObj = dialogs.filter(\r\n    (dialog) => dialog._id === currentDialogId\r\n  )[0];\r\n\r\n  let partner = {};\r\n\r\n  if (currentDialogObj.author._id === user._id) {\r\n    partner = currentDialogObj.partner;\r\n  } else {\r\n    partner = currentDialogObj.author;\r\n  }\r\n  return <StatusBase online={partner.isOnline} fullname={partner.fullname} />;\r\n};\r\n\r\nexport default connect(({ dialogs, user }) => ({\r\n  dialogs: dialogs.items,\r\n  currentDialogId: dialogs.currentDialogId,\r\n  user: user.data,\r\n}))(Status);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Sidebar } from \"../components/indexComponents\";\r\nimport { connect } from \"react-redux\";\r\nimport { userApi, dialogsApi, messagesApi } from \"../utils/api/indexApi\";\r\n\r\nconst SidebarContainer = ({ user }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [messageText, setMessagaText] = useState(\"\");\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedUserId, setSelectedUserId] = useState(false);\r\n  \r\n    const onClose = () => {\r\n      setVisible(false);\r\n    };\r\n  \r\n\r\n    const onShow = () => {\r\n      setVisible(true);\r\n    };\r\n  \r\n    const onSearch = value => {\r\n      setIsLoading(true);\r\n      userApi\r\n        .searchUser(value)\r\n        .then(({ data }) => {\r\n          setUsers(data);\r\n          setIsLoading(false);\r\n        })\r\n        .catch(() => {\r\n          setIsLoading(false);\r\n        });\r\n    };\r\n  \r\n    const onAddDialog = () => {\r\n      dialogsApi\r\n        .create({\r\n          partner: selectedUserId,\r\n          text: messageText\r\n        })\r\n        .then(onClose)\r\n        .catch(() => {\r\n          setIsLoading(false);\r\n        });\r\n        \r\n    };\r\n  \r\n    const handleChangeInput = value => {\r\n      setInputValue(value);\r\n    };\r\n  \r\n    const onChangeTextArea = e => {\r\n      setMessagaText(e.target.value);\r\n    };\r\n  \r\n    const onSelectUser = userId => {\r\n      setSelectedUserId(userId);\r\n    };\r\n    \r\n\r\n    return (\r\n      <Sidebar\r\n        user={user}\r\n        inputValue={inputValue}\r\n        visible={visible}\r\n        isLoading={isLoading}\r\n        onClose={onClose}\r\n        onShow={onShow}\r\n        onSearch={onSearch}\r\n        onChangeInput={handleChangeInput}\r\n        onSelectUser={onSelectUser}\r\n        onModalOk={onAddDialog}\r\n        onChangeTextArea={onChangeTextArea}\r\n        messageText={messageText}\r\n        selectedUserId={selectedUserId}\r\n        users={users}\r\n      />\r\n    );\r\n  };\r\n  \r\n  export default connect(({ user }) => ({ user: user.data }))(SidebarContainer);","import React from \"react\";\r\nimport { TeamOutlined, FormOutlined } from \"@ant-design/icons\";\r\nimport { Dialogs } from \"../../containers/indexContainers\";\r\nimport { Button, Modal, Select, Input, Form } from \"antd\";\r\n\r\nimport \"./Sidebar.scss\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst Sidebar = ({\r\n  user,\r\n  visible,\r\n  inputValue,\r\n  messageText,\r\n  selectedUserId,\r\n  isLoading,\r\n  users,\r\n  onShow,\r\n  onClose,\r\n  onSearch,\r\n  onChangeInput,\r\n  onSelectUser,\r\n  onChangeTextArea,\r\n  onModalOk,\r\n}) => {\r\n  const options = users.map((user) => (\r\n    <Option key={user._id}>{user.fullname}</Option>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"chat__sidebar\">\r\n      <div className=\"chat__sidebar-header\">\r\n        <div>\r\n          <TeamOutlined />\r\n          <span>Список диалогов</span>\r\n        </div>\r\n        <Button\r\n          onClick={onShow}\r\n          type=\"link\"\r\n          shape=\"circle\"\r\n          icon={<FormOutlined />}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"chat__sidebar-dialogs\">\r\n        <Dialogs userId={user && user._id} />\r\n      </div>\r\n      <Modal\r\n        title=\"Создать диалог\"\r\n        visible={visible}\r\n        onCancel={onClose}\r\n        width={450}\r\n        footer={[\r\n          <Button key=\"back\" onClick={onClose}>\r\n            Закрыть\r\n          </Button>,\r\n          <Button\r\n            disabled={!messageText}\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            loading={isLoading}\r\n            onClick={onModalOk}\r\n          >\r\n            Создать\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form className=\"add-dialog-form\">\r\n          <Form.Item label=\"Введите имя пользователя или E-Mail\">\r\n            <Select\r\n              className=\"ant-form-item\"\r\n              value={inputValue}\r\n              onSearch={onSearch}\r\n              onChange={onChangeInput}\r\n              onSelect={onSelectUser}\r\n              notFoundContent={null}\r\n              style={{ width: \"100%\" }}\r\n              defaultActiveFirstOption={false}\r\n              showArrow={false}\r\n              filterOption={false}\r\n              placeholder=\"Введите имя пользователя или почту\"\r\n              onClose={onClose}\r\n              showSearch\r\n            >\r\n              {options}\r\n            </Select>\r\n          </Form.Item>\r\n          {selectedUserId && (\r\n            <Form.Item\r\n              label=\"Введите текст сообщения\"\r\n              className=\"ant-form-item\"\r\n            >\r\n              <TextArea\r\n                autosize={{ minRows: 3, maxRows: 10 }}\r\n                onChange={onChangeTextArea}\r\n                value={messageText}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  users: [],\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nimport { Button, Block } from \"../../../components/indexComponents\";\r\nimport { validateField } from \"../../../utils/helpers\";\r\n\r\nconst LoginForm = (props) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isValid,\r\n    isSubmitting,\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block>\r\n        <Form onSubmit={handleSubmit} className=\"login-form\">\r\n          <Form.Item\r\n            validateStatus={validateField(\"email\", touched, errors)}\r\n            help={!touched.email ? \"\" : errors.email}\r\n            hasFeedback\r\n          >\r\n            <Input\r\n              id=\"email\"\r\n              prefix={<MailOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"E-mail\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            validateStatus={validateField(\"password\", touched, errors)}\r\n            help={!touched.password ? \"\" : errors.password}\r\n            hasFeedback\r\n          >\r\n            <Input\r\n              id=\"password\"\r\n              prefix={<LockOutlined />}\r\n              size=\"large\"\r\n              type=\"password\"\r\n              placeholder=\"Пароль\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n            <Button\r\n              disabled={isSubmitting}\r\n              onClick={handleSubmit}\r\n              type=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Войти в аккаунт\r\n            </Button>\r\n          </Form.Item>\r\n          <Link className=\"auth__login-link\" to=\"/registration\">\r\n            Зарегистрироваться\r\n          </Link>\r\n        </Form>\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","export default ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: (value) => {\r\n      if (!value) {\r\n        errors.email = \"Введите e-mail\";\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        errors.email = \"Неверный e-mail\";\r\n      }\r\n    },\r\n    password: (value) => {\r\n      if (!value) {\r\n        errors.password = \"Введите пароль\";\r\n      } else if (\r\n        !isAuth &&\r\n        !/^(?=.*[0-9])(?=.*[a-z])[0-9a-z]{6,}/.test(value)\r\n      ) {\r\n        errors.password = isAuth ? \"Неверный пароль\" : \"Слишком легкий пароль\";\r\n      }\r\n    },\r\n    password_2: (value) => {\r\n      if (!isAuth && value !== values.password) {\r\n        errors.password_2 = \"Пароли не совпадают\";\r\n      }\r\n    },\r\n    fullname: (value) => {\r\n      if (!isAuth && !value) {\r\n        errors.fullname = \"Укажите свое Имя и Фамилию\";\r\n      }\r\n    },\r\n  };\r\n\r\n  Object.keys(values).forEach((key) => rules[key] && rules[key](values[key]));\r\n};\r\n","import LoginForm from './containers/LoginForm';\r\n\r\nexport default LoginForm;","import { withFormik } from \"formik\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport validateForm from \"../../../utils/validate\";\r\n\r\nimport { userActions } from \"../../../redux/actions/indexActions\";\r\n\r\nimport store from \"./../../../redux/store\";\r\n\r\nconst LoginFormContainer = withFormik({\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n  }),\r\n  validate: (values) => {\r\n    let errors = {};\r\n\r\n    validateForm({ isAuth: true, values, errors });\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    store\r\n      .dispatch(userActions.fetchUserLogin(values))\r\n      .then(({ status }) => {\r\n          if (status === \"success\") {\r\n            props.history.push(\"/\");\r\n          }\r\n\r\n        setSubmitting(false);\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false);\r\n      });\r\n  },\r\n  displayName: \"LoginForm\",\r\n})(LoginForm);\r\n\r\nexport default LoginFormContainer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Form, Input } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  EyeTwoTone,\r\n  EyeInvisibleOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  InfoCircleTwoTone,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { Button, Block, FormField } from \"../../../components/indexComponents\";\r\nimport { validateField } from \"../../../utils/helpers/index\";\r\n\r\nconst success = true;\r\n\r\nconst RegistrationForm = (props) => {\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    isSubmitting\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"auth__top\">\r\n        <h2>Регистрация</h2>\r\n        <p>Для входа в чат, вам нужно зарегистрироваться</p>\r\n      </div>\r\n      <Block>\r\n        {success ? (\r\n          <Form onSubmit={handleSubmit}>\r\n            <FormField\r\n              name=\"email\"\r\n              icon={<MailOutlined />}\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              placeholder={\"E-mail\"}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n              type=\"text\"\r\n            />\r\n            <FormField\r\n              name=\"fullname\"\r\n              icon={<UserOutlined />}\r\n              handleChange={handleChange}\r\n              handleBlur={handleBlur}\r\n              placeholder={\"Имя и Фамилия\"}\r\n              touched={touched}\r\n              errors={errors}\r\n              values={values}\r\n              type=\"text\"\r\n            />\r\n\r\n            {/* \r\n!\r\n!\r\n!\r\n ПОЛЯ С ПАРОЛЯМИ ОСТАВИЛ ПО-СТАРОМУ, НЕ ПРОКИДЫВАЛОСЬ ЗНАЧЕНИЕ iconRender,\r\nесли будут ошибки в дальнейшем - поправить поля по примеру выше через компонент FormField */}\r\n\r\n            <Form.Item\r\n              validateStatus={validateField(\"password\", touched, errors)}\r\n              help={!touched.password ? \"\" : errors.password}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Введите Ваш пароль\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                size=\"large\"\r\n                placeholder=\"Пароль\"\r\n                prefix={<LockOutlined />}\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              validateStatus={validateField(\"password_2\", touched, errors)}\r\n              help={!touched.password_2 ? \"\" : errors.password_2}\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Повторите Ваш пароль\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                id=\"password_2\"\r\n                size=\"large\"\r\n                name=\"password_2\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Повторите пароль\"\r\n                prefix={<LockOutlined />}\r\n                iconRender={(visible) =>\r\n                  visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                }\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n            <Button\r\n                disabled={isSubmitting}\r\n                onClick={handleSubmit}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                Зарегистироваться\r\n              </Button>\r\n            </Form.Item>\r\n            <Link to=\"/login\" className=\"auth__login-link\">\r\n              Войти в аккаунт\r\n            </Link>\r\n          </Form>\r\n        ) : (\r\n          <div className=\"auth__success--block\">\r\n            <InfoCircleTwoTone />\r\n            <h2>Подтвердите свой аккаунт</h2>\r\n            <p>\r\n              На Вашу почту отправлено письмо с ссылкой на подтверждение\r\n              аккаунта.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import RegistrationForm from './containers/RegistrationForm';\r\n\r\nexport default RegistrationForm;","import { withFormik } from \"formik\";\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\nimport validateForm from \"../../../utils/validate\";\r\n\r\nimport { userActions } from \"../../../redux/actions/indexActions\";\r\nimport store from \"./../../../redux/store\";\r\n\r\nexport default withFormik({\r\n  //   mapPropsToValues: () => ({ email: \"test@asd.com\" }), set default value\r\n  enableReinitialize: true,\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    fullname: \"\",\r\n    password: \"\",\r\n    password_2: \"\",\r\n  }),\r\n  validate: (values) => {\r\n    let errors = {};\r\n    validateForm({ isAuth: false, values, errors });\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, { setSubmitting, props }) => {\r\n    store\r\n      .dispatch(userActions.fetchUserRegistration(values))\r\n      .then(({ status }) => {\r\n        setTimeout(() => {\r\n          if (status === \"success\") {\r\n            props.history.push(\"/registration/verify\");\r\n          }\r\n        }, 300);\r\n\r\n        setSubmitting(false);\r\n      })\r\n      .catch(() => {\r\n        setSubmitting(false);\r\n      });\r\n  },\r\n\r\n  displayName: \"RegistrationForm\",\r\n})(RegistrationForm);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Result, Button, Spin } from \"antd\";\r\n\r\nimport { userApi } from \"../../../utils/api/indexApi\";\r\nimport { Block } from \"../../../components/indexComponents\";\r\n\r\nimport \"./CheckEmailInfo.scss\";\r\n\r\nconst renderTextInfo = ({ hash, verified }) => {\r\n  if (hash) {\r\n    if (verified) {\r\n      return {\r\n        status: \"success\",\r\n        title: \"Готово!\",\r\n        message: \"Аккаунт успешно подтвержден!\",\r\n      };\r\n    } else {\r\n      return {\r\n        status: \"error\",\r\n        title: \"Ошибка\",\r\n        message: \"Вы указали несуществующий или неверный хеш.\",\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      status: \"info\",\r\n      title: \"Сорян =)\",\r\n      message: `К сожалению, мы не успели настроить почтовый сервис, поэтому хэш небезопасно хранится в LocalStorage. Пожалуйста, подтвердите аккаунт здесь`,\r\n    };\r\n  }\r\n};\r\n\r\nconst CheckEmailInfo = ({ location, history }) => {\r\n  const hash = location.search.split(\"hash=\")[1];\r\n  const [verified, setVerified] = useState(false);\r\n  const [checking, setChecking] = useState(!!hash);\r\n  const [info, setInfo] = useState(\r\n    renderTextInfo({ hash, checking, verified })\r\n  );\r\n\r\n  const setStatus = ({ checking, verified }) => {\r\n    setInfo(renderTextInfo({ hash, checking, verified }));\r\n    setVerified(verified);\r\n    setChecking(checking);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hash) {\r\n      userApi\r\n        .verifyHash(hash)\r\n        .then(() => {\r\n          setStatus({ verified: true, checking: false });\r\n        })\r\n        .catch(() => {\r\n          setStatus({ verified: false, checking: false });\r\n        });\r\n    }\r\n  }, []);\r\n\r\n\r\n  let verify_link = `http://localhost:3000/registration/verify?hash=${window.localStorage[\"email_hash\"]}`;\r\n  return (\r\n    <div className=\"verify-block\">\r\n      <Block>\r\n        {!checking ? (\r\n          <Result\r\n            status={info.status}\r\n            title={info.title}\r\n            subTitle={info.message}\r\n            extra={\r\n              info.status === \"success\" &&\r\n              verified && (\r\n                <Button type=\"primary\" onClick={() => history.push(\"/login\")}>\r\n                  Войти\r\n                </Button>\r\n              )\r\n            }\r\n          />\r\n        ) : (\r\n          <div className=\"verify-block__loading\">\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        )}\r\n        {!verified ? (\r\n          <Button id=\"verify_link\" type=\"primary\" href={verify_link}>\r\n            Подтвердить аккаунт\r\n          </Button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Block>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckEmailInfo;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport LoginForm from \"../../modules/LoginForm/indexLoginForm\";\r\nimport RegistrationForm from \"../../modules/RegistrationForm/indexRegistrationForm\";\r\n\r\nimport CheckEmailInfo from \"./components/CheckEmailInfo\";\r\n\r\nimport \"./Auth.scss\";\r\n\r\nfunction Auth() {\r\n  return (\r\n      <section className=\"auth\">\r\n        <div className=\"auth__content\">\r\n          <Route exact path=\"/login\" component={LoginForm} />\r\n          <Route exact path=\"/registration\" component={RegistrationForm} />\r\n          <Route exact path=\"/registration/verify\" component={CheckEmailInfo} />\r\n        </div>\r\n      </section>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\n\r\n\r\nimport { Button } from \"antd\";\r\nimport {\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Messages,\r\n  ChatInput,\r\n  StatusHead,\r\n} from \"../../containers/indexContainers\";\r\nimport { Sidebar } from \"../../containers/indexContainers\";\r\n\r\nimport \"./Home.scss\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"chat\">\r\n        <Sidebar />\r\n        <div className=\"chat__dialog\">\r\n          <div className=\"chat__dialog-header\">\r\n            <div></div>\r\n            <div className=\"chat__dialog-header-center\">\r\n              <b className=\"chat__dialog-header-username\">\r\n                <StatusHead />\r\n              </b>\r\n            </div>\r\n            <Button type=\"link\" shape=\"circle\" icon={<EllipsisOutlined />} />\r\n          </div>\r\n          <div className=\"chat__dialog-messages\">\r\n            <Messages />\r\n          </div>\r\n          <div className=\"chat__dialog-input\">\r\n            <ChatInput />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport { Auth, Home } from \"./pages/indexPages.js\";\r\n\r\nconst App = (props) => {\r\n  const { isAuth } = props;\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={[\"/login\", \"/registration\", \"/registration/verify\"]}\r\n            component={Auth}\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            render={() => (isAuth ? <Home /> : <Redirect to=\"/login\" />)}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n      <div id='footer'>\r\n<img src=\"https://rs.school/images/rs_school_js.svg\" alt=\"logo\" width=\"150px\"/>\r\n<a href=\"https://rs.school/js/\">RSS School</a>\r\n<span>Chat 2021</span> \r\n<div className=\"developers\">\r\n    <h3>developed by</h3>\r\n<a href=\"https://github.com/DreamerAleksey\">Dreamer Aleksey</a>\r\n<a href=\"https://github.com/Voloshin-Sergei\">Voloshin Sergei</a>\r\n<a href=\"https://github.com/spbtne\">Nikita Tushin</a>\r\n</div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(({ user }) => ({ isAuth: user.isAuth }))(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store';\r\n\r\nimport \"./styles/index.scss\";\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\n\r\n\r\nimport App from \"./App\";\r\nimport { userActions } from \"./redux/actions/indexActions\";\r\nstore.dispatch(userActions.fetchUserData());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}